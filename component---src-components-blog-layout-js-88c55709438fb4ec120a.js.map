{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/prism-react-renderer/prism/index.js","webpack:///./node_modules/prism-react-renderer/dist/index.js","webpack:///./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack:///./node_modules/prism-react-renderer/themes/github/index.js","webpack:///./src/components/code-block.js","webpack:///./src/components/blog-layout.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","i","arr2","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","key","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","obj","value","defineProperty","enumerable","configurable","writable","uniqueId","_","Token","Prism","util","encode","tokens","type","content","alias","map","replace","match","objId","clone","visited","hasOwnProperty","forEach","v","languages","extend","id","redef","lang","insertBefore","inside","before","insert","root","grammar","arguments","newToken","ret","token","DFS","this","callback","plugins","highlight","text","language","env","code","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","to","k","delNum","after","args","push","wrapped","splice","apply","hooks","add","rest","matchedStr","parent","element","join","tag","classes","attributes","aliases","markup","tagName","includedCdataInside","def","xml","html","mathml","svg","envVars","insideString","bash","variable","toBeCopied","shell","clike","punctuation","c","cpp","string","css","addInlined","selector","javascript","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","javaDocLike","javadoclike","docLanguage","definition","l","docCommentSupport","addSupport","keywords","className","java","function","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","indexOf","tokenizePlaceholders","t","s","substring","middle","replacement","concat","php","string_interpolation","parameterPrefix","jsdoc","actionscript","comment","interpolation","coffeescript","coffee","unshift","maybeClassNameTokens","flow","keyword","n4js","n4jsd","typescript","ts","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","counter","tokenizeWithHooks","run","tokenizeInterpolationExpression","expression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","afterTokens","filter","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","graphql","inner","createInline","starAlternative","tableCell","tableRow","tableLine","markdown","codeLang","codeBlock","trim","split","toLowerCase","cls","autoloader","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","md","diff","PREFIXES","prefix","git","go","handlebars","json","less","makefile","objectivec","ocaml","python","py","reason","sass","atrule","operator","important","property","scss","sql","stylus","func","tsx","wasm","yaml","yml","defaultProps","theme","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Component","Highlight","this$1","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","padding","BlogLayout","data","components","pre","title","frontmatter","body","isNativeReflectConstruct","_construct","Parent","Class","a","instance","Function","bind"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,mBCLfE,EAAOC,QAJP,WACE,MAAM,IAAIC,UAAU,0I,mBCGtBF,EAAOC,QAJP,SAA0BE,GACxB,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOI,MAAMC,KAAKL,K,qBCD1F,IAAIM,EAAmB,EAAQ,QAM/BT,EAAOC,QAJP,SAA4BS,GAC1B,GAAIH,MAAMI,QAAQD,GAAM,OAAOD,EAAiBC,K,qBCHlD,IAAIE,EAAoB,EAAQ,QAE5BC,EAAkB,EAAQ,QAE1BC,EAA6B,EAAQ,QAErCC,EAAoB,EAAQ,QAMhCf,EAAOC,QAJP,SAA4BS,GAC1B,OAAOE,EAAkBF,IAAQG,EAAgBH,IAAQI,EAA2BJ,IAAQK,M,mBCT9F,SAASC,EAAgBC,EAAGC,GAM1B,OALAlB,EAAOC,QAAUe,EAAkBV,OAAOa,gBAAkB,SAAyBF,EAAGC,GAEtF,OADAD,EAAEG,UAAYF,EACPD,GAGFD,EAAgBC,EAAGC,GAG5BlB,EAAOC,QAAUe,G,mBCCjBhB,EAAOC,QAVP,SAA2BS,EAAKW,IACnB,MAAPA,GAAeA,EAAMX,EAAIY,UAAQD,EAAMX,EAAIY,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIjB,MAAMc,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKb,EAAIa,GAGhB,OAAOC,I,woBCPT,IAAMC,EAAQ1B,EAAd,QACQ2B,EAAQ3B,EAAQ,QAAhB2B,IACAC,EAAgB5B,EAAQ,QAAxB4B,YAER3B,UAAiB,SAAqB,GAIlC,IAHF4B,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGC,EACF,0BACKC,EAAWJ,EADhB,GAIKK,EAAMP,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMQ,EAAS,GAGbR,MAHa,EAIbC,OAJF,GAQMQ,EAAO5B,YAAb,GACM6B,EAASD,EAAA,KAAS,SAAAE,GAAG,OAAIH,EAAJ,MAG3B,OAFQ,mCAAR,KAEOI,2BAAP,OACC,CAACR,EAlBJ,IAoBA,OAAOJ,uBAAP,M,qBChCF,IAAIhB,EAAmB,EAAQ,QAW/BT,EAAOC,QATP,SAAqCgB,EAAGqB,GACtC,GAAKrB,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOR,EAAiBQ,EAAGqB,GACtD,IAAIC,EAAIjC,OAAOkC,UAAUC,SAASC,KAAKzB,GAAG0B,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBtB,EAAE2B,cAAaL,EAAItB,EAAE2B,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBhC,MAAMC,KAAKS,GACxC,cAANsB,GAAqB,2CAA2CO,KAAKP,GAAW9B,EAAiBQ,EAAGqB,QAAxG,K,mBCKFtC,EAAOC,QAbP,WACE,GAAuB,oBAAZ8C,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKX,UAAUC,SAASC,KAAKK,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOC,GACP,OAAO,K,mBCMXpD,EAAOC,QAfP,SAAyBoD,EAAKjB,EAAKkB,GAYjC,OAXIlB,KAAOiB,EACT/C,OAAOiD,eAAeF,EAAKjB,EAAK,CAC9BkB,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIjB,GAAOkB,EAGND,I,uFCKHM,EACAC,EA4SAC,E,iFA9SFC,G,UACEH,EAAW,EACXC,EAAI,CACNG,KAAM,CACJC,OAAQ,SAAgBC,GACtB,OAAIA,aAAkBJ,EACb,IAAIA,EAAMI,EAAOC,KAAMN,EAAEG,KAAKC,OAAOC,EAAOE,SAAUF,EAAOG,OACnC,UAAxBR,EAAEG,KAAKG,KAAKD,GACdA,EAAOI,IAAIT,EAAEG,KAAKC,QAElBC,EAAOK,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,MAGlFJ,KAAM,SAAcjD,GAClB,OAAOX,OAAOkC,UAAUC,SAASC,KAAKzB,GAAGsD,MAAM,oBAAoB,IAErEC,MAAO,SAAenB,GAOpB,OANKA,EAAU,MACb/C,OAAOiD,eAAeF,EAAK,OAAQ,CACjCC,QAASK,IAINN,EAAU,MAGnBoB,MAAO,SAAexD,EAAGyD,GACvB,IAAIR,EAAON,EAAEG,KAAKG,KAAKjD,GAIvB,OAFAyD,EAAUA,GAAW,GAEbR,GACN,IAAK,SACH,GAAIQ,EAAQd,EAAEG,KAAKS,MAAMvD,IACvB,OAAOyD,EAAQd,EAAEG,KAAKS,MAAMvD,IAM9B,IAAK,IAAImB,KAHLqC,EAAQ,GACZC,EAAQd,EAAEG,KAAKS,MAAMvD,IAAMwD,EAEXxD,EACVA,EAAE0D,eAAevC,KACnBqC,EAAMrC,GAAOwB,EAAEG,KAAKU,MAAMxD,EAAEmB,GAAMsC,IAItC,OAAOD,EAET,IAAK,QACH,GAAIC,EAAQd,EAAEG,KAAKS,MAAMvD,IACvB,OAAOyD,EAAQd,EAAEG,KAAKS,MAAMvD,IAG9B,IAAIwD,EAAQ,GAKZ,OAJAC,EAAQd,EAAEG,KAAKS,MAAMvD,IAAMwD,EAC3BxD,EAAE2D,SAAQ,SAAUC,EAAGtD,GACrBkD,EAAMlD,GAAKqC,EAAEG,KAAKU,MAAMI,EAAGH,MAEtBD,EAGX,OAAOxD,IAGX6D,UAAW,CACTC,OAAQ,SAAgBC,EAAIC,GAC1B,IAAIC,EAAOtB,EAAEG,KAAKU,MAAMb,EAAEkB,UAAUE,IAEpC,IAAK,IAAI5C,KAAO6C,EACdC,EAAK9C,GAAO6C,EAAM7C,GAGpB,OAAO8C,GAYTC,aAAc,SAAsBC,EAAQC,EAAQC,EAAQC,GAE1D,IAAIC,GADJD,EAAOA,GAAQ3B,EAAEkB,WACEM,GAEnB,GAAwB,GAApBK,UAAUnE,OAAa,CAGzB,IAAK,IAAIoE,KAFTJ,EAASG,UAAU,GAGbH,EAAOX,eAAee,KACxBF,EAAQE,GAAYJ,EAAOI,IAI/B,OAAOF,EAGT,IAAIG,EAAM,GAEV,IAAK,IAAIC,KAASJ,EAChB,GAAIA,EAAQb,eAAeiB,GAAQ,CACjC,GAAIA,GAASP,EACX,IAAK,IAAIK,KAAYJ,EACfA,EAAOX,eAAee,KACxBC,EAAID,GAAYJ,EAAOI,IAK7BC,EAAIC,GAASJ,EAAQI,GAWzB,OANAhC,EAAEkB,UAAUe,IAAIjC,EAAEkB,WAAW,SAAU1C,EAAKkB,GACtCA,IAAUiC,EAAKH,IAAWhD,GAAOgD,IACnCU,KAAK1D,GAAOuD,MAITJ,EAAKH,GAAUO,GAGxBE,IAAK,SAAa5E,EAAG8E,EAAU7B,EAAMQ,GAGnC,IAAK,IAAInD,KAFTmD,EAAUA,GAAW,GAEPzD,EACRA,EAAE0D,eAAepD,KACnBwE,EAASrD,KAAKzB,EAAGM,EAAGN,EAAEM,GAAI2C,GAAQ3C,GAER,WAAtBqC,EAAEG,KAAKG,KAAKjD,EAAEM,KAAqBmD,EAAQd,EAAEG,KAAKS,MAAMvD,EAAEM,KAI7B,UAAtBqC,EAAEG,KAAKG,KAAKjD,EAAEM,KAAoBmD,EAAQd,EAAEG,KAAKS,MAAMvD,EAAEM,OAClEmD,EAAQd,EAAEG,KAAKS,MAAMvD,EAAEM,MAAO,EAE9BqC,EAAEkB,UAAUe,IAAI5E,EAAEM,GAAIwE,EAAUxE,EAAGmD,KANnCA,EAAQd,EAAEG,KAAKS,MAAMvD,EAAEM,MAAO,EAE9BqC,EAAEkB,UAAUe,IAAI5E,EAAEM,GAAIwE,EAAU,KAAMrB,OAUhDsB,QAAS,GACTC,UAAW,SAAmBC,EAAMV,EAASW,GAC3C,IAAIC,EAAM,CACRC,KAAMH,EACNV,QAASA,EACTW,SAAUA,GAGZ,OADAC,EAAInC,OAASL,EAAE0C,SAASF,EAAIC,KAAMD,EAAIZ,SAC/B3B,EAAM0C,UAAU3C,EAAEG,KAAKC,OAAOoC,EAAInC,QAASmC,EAAID,WAExDK,aAAc,SAAsBN,EAAMO,EAAQjB,EAASkB,EAAOC,EAAUC,EAASC,GACnF,IAAIhD,EAAQD,EAAEC,MAEd,IAAK,IAAI+B,KAASJ,EAChB,GAAKA,EAAQb,eAAeiB,IAAWJ,EAAQI,GAA/C,CAIA,GAAIA,GAASiB,EACX,OAGF,IAAIC,EAAWtB,EAAQI,GACvBkB,EAAqC,UAA1BlD,EAAEG,KAAKG,KAAK4C,GAAwBA,EAAW,CAACA,GAE3D,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASxF,SAAUyF,EAAG,CACxC,IAAIC,EAAUF,EAASC,GACnB3B,EAAS4B,EAAQ5B,OACjB6B,IAAeD,EAAQC,WACvBC,IAAWF,EAAQE,OACnBC,EAAmB,EACnB/C,EAAQ4C,EAAQ5C,MAEpB,GAAI8C,IAAWF,EAAQA,QAAQI,OAAQ,CAErC,IAAIC,EAAQL,EAAQA,QAAQvE,WAAW8B,MAAM,YAAY,GACzDyC,EAAQA,QAAUM,OAAON,EAAQA,QAAQO,OAAQF,EAAQ,KAG3DL,EAAUA,EAAQA,SAAWA,EAE7B,IAAK,IAAIzF,EAAImF,EAAOc,EAAMb,EAAUpF,EAAIkF,EAAOnF,OAAQkG,GAAOf,EAAOlF,GAAGD,SAAUC,EAAG,CACnF,IAAIkG,EAAMhB,EAAOlF,GAEjB,GAAIkF,EAAOnF,OAAS4E,EAAK5E,OAEvB,OAGF,KAAImG,aAAe5D,GAAnB,CAIA,GAAIqD,GAAU3F,GAAKkF,EAAOnF,OAAS,EAAG,CAIpC,GAHA0F,EAAQU,UAAYF,IAChBjD,EAAQyC,EAAQW,KAAKzB,IAGvB,MAQF,IALA,IAAI1F,EAAO+D,EAAMmC,OAASO,EAAa1C,EAAM,GAAGjD,OAAS,GACrDsG,EAAKrD,EAAMmC,MAAQnC,EAAM,GAAGjD,OAC5BuG,EAAItG,EACJL,EAAIsG,EAECnG,EAAMoF,EAAOnF,OAAQuG,EAAIxG,IAAQH,EAAI0G,IAAOnB,EAAOoB,GAAG3D,OAASuC,EAAOoB,EAAI,GAAGX,UAAWW,EAG3FrH,IAFJU,GAAKuF,EAAOoB,GAAGvG,YAGXC,EACFiG,EAAMtG,GAKV,GAAIuF,EAAOlF,aAAcsC,EACvB,SAIFiE,EAASD,EAAItG,EACbkG,EAAMvB,EAAKvD,MAAM6E,EAAKtG,GACtBqD,EAAMmC,OAASc,MACV,CACLR,EAAQU,UAAY,EACpB,IAAInD,EAAQyC,EAAQW,KAAKF,GACrBK,EAAS,EAGf,GAAKvD,EAAL,CAQI0C,IACFE,EAAmB5C,EAAM,GAAKA,EAAM,GAAGjD,OAAS,GAK9CsG,GAFApH,EAAO+D,EAAMmC,MAAQS,IACrB5C,EAAQA,EAAM,GAAG5B,MAAMwE,IACL7F,OAFtB,IAGI+D,EAASoC,EAAI9E,MAAM,EAAGnC,GACtBuH,EAAQN,EAAI9E,MAAMiF,GAClBI,EAAO,CAACzG,EAAGuG,GAEXzC,MACA9D,EACFiG,GAAOnC,EAAO/D,OACd0G,EAAKC,KAAK5C,IAGZ,IAAI6C,EAAU,IAAIrE,EAAM+B,EAAOR,EAASxB,EAAE0C,SAAS/B,EAAOa,GAAUb,EAAOH,EAAOG,EAAO2C,GAazF,GAZAc,EAAKC,KAAKC,GAENH,GACFC,EAAKC,KAAKF,GAGZxH,MAAMiC,UAAU2F,OAAOC,MAAM3B,EAAQuB,GAEvB,GAAVF,GACFlE,EAAE4C,aAAaN,EAAMO,EAAQjB,EAASjE,EAAGiG,GAAK,EAAM5B,GAGlDgB,EACF,WAtCA,GAAIA,EACF,WA2CZyB,MAAO,CACLC,IAAK,cAEPhC,SAAU,SAAkBJ,EAAMV,EAASW,GACzC,IAAIM,EAAS,CAACP,GACVqC,EAAO/C,EAAQ+C,KAEnB,GAAIA,EAAM,CACR,IAAK,IAAI3C,KAAS2C,EAChB/C,EAAQI,GAAS2C,EAAK3C,UAGjBJ,EAAQ+C,KAKjB,OAFA3E,EAAE4C,aAAaN,EAAMO,EAAQjB,EAAS,EAAG,GAAG,GAErCiB,KAIP5C,EAAQD,EAAEC,MAAQ,SAAUK,EAAMC,EAASC,EAAOoE,EAAYtB,GAChEpB,KAAK5B,KAAOA,EACZ4B,KAAK3B,QAAUA,EACf2B,KAAK1B,MAAQA,EAEb0B,KAAKxE,OAAqC,GAA3BkH,GAAc,IAAIlH,OACjCwE,KAAKoB,SAAWA,IAGZX,UAAY,SAAUtF,EAAGkF,EAAUsC,GACvC,GAAgB,iBAALxH,EACT,OAAOA,EAGT,GAAuB,UAAnB2C,EAAEG,KAAKG,KAAKjD,GACd,OAAOA,EAAEoD,KAAI,SAAUqE,GACrB,OAAO7E,EAAM0C,UAAUmC,EAASvC,EAAUlF,MACzC0H,KAAK,IAGV,IAAIvC,EAAM,CACRlC,KAAMjD,EAAEiD,KACRC,QAASN,EAAM0C,UAAUtF,EAAEkD,QAASgC,EAAUsC,GAC9CG,IAAK,OACLC,QAAS,CAAC,QAAS5H,EAAEiD,MACrB4E,WAAY,GACZ3C,SAAUA,EACVsC,OAAQA,GAGV,GAAIxH,EAAEmD,MAAO,CACX,IAAI2E,EAAmC,UAAzBnF,EAAEG,KAAKG,KAAKjD,EAAEmD,OAAqBnD,EAAEmD,MAAQ,CAACnD,EAAEmD,OAC9D7D,MAAMiC,UAAUyF,KAAKG,MAAMhC,EAAIyC,QAASE,GAG1C,IAAID,EAAaxI,OAAO4B,KAAKkE,EAAI0C,YAAYzE,KAAI,SAAUxB,GACzD,OAAOA,EAAO,MAAQuD,EAAI0C,WAAWjG,IAAS,IAAIyB,QAAQ,KAAM,UAAY,OAC3EqE,KAAK,KACR,MAAO,IAAMvC,EAAIwC,IAAM,WAAaxC,EAAIyC,QAAQF,KAAK,KAAO,KAAOG,EAAa,IAAMA,EAAa,IAAM,IAAM1C,EAAIjC,QAAU,KAAOiC,EAAIwC,IAAM,KAGzIhF,GAOTE,EAAMgB,UAAUkE,OAAS,CACvB,QAAW,kBACX,OAAU,iBACV,QAAW,sBACX,MAAS,0BACT,IAAO,CACLhC,QAAS,wHACTE,QAAQ,EACR9B,OAAQ,CACN,IAAO,CACL4B,QAAS,kBACT5B,OAAQ,CACN,YAAe,QACf,UAAa,iBAGjB,aAAc,CACZ4B,QAAS,sCACT5B,OAAQ,CACN,YAAe,CAAC,KAAM,CACpB4B,QAAS,mBACTC,YAAY,MAIlB,YAAe,OACf,YAAa,CACXD,QAAS,YACT5B,OAAQ,CACN,UAAa,mBAKrB,OAAU,qBAEZtB,EAAMgB,UAAUkE,OAAY,IAAE5D,OAAO,cAAcA,OAAe,OAAItB,EAAMgB,UAAUkE,OAAe,OAErGlF,EAAMuE,MAAMC,IAAI,QAAQ,SAAUlC,GACf,WAAbA,EAAIlC,OACNkC,EAAI0C,WAAkB,MAAI1C,EAAIjC,QAAQG,QAAQ,QAAS,SAG3DhE,OAAOiD,eAAeO,EAAMgB,UAAUkE,OAAOJ,IAAK,aAAc,CAY9DtF,MAAO,SAAoB2F,EAAS/D,GAClC,IAAIgE,EAAsB,GAC1BA,EAAoB,YAAchE,GAAQ,CACxC8B,QAAS,oCACTC,YAAY,EACZ7B,OAAQtB,EAAMgB,UAAUI,IAE1BgE,EAA2B,MAAI,uBAC/B,IAAI9D,EAAS,CACX,iBAAkB,CAChB4B,QAAS,4BACT5B,OAAQ8D,IAGZ9D,EAAO,YAAcF,GAAQ,CAC3B8B,QAAS,UACT5B,OAAQtB,EAAMgB,UAAUI,IAE1B,IAAIiE,EAAM,GACVA,EAAIF,GAAW,CACbjC,QAASM,OAAO,mEAAmEC,OAAOjD,QAAQ,MAAO2E,GAAU,KACnHhC,YAAY,EACZC,QAAQ,EACR9B,OAAQA,GAEVtB,EAAMgB,UAAUK,aAAa,SAAU,QAASgE,MAGpDrF,EAAMgB,UAAUsE,IAAMtF,EAAMgB,UAAUC,OAAO,SAAU,IACvDjB,EAAMgB,UAAUuE,KAAOvF,EAAMgB,UAAUkE,OACvClF,EAAMgB,UAAUwE,OAASxF,EAAMgB,UAAUkE,OACzClF,EAAMgB,UAAUyE,IAAMzF,EAAMgB,UAAUkE,OAGtC,SAAWlF,GAKT,IAAI0F,EAAU,0oCACVC,EAAe,CACjB,YAAe,CACbzC,QAASM,OAAO,MAAQkC,GACxBpF,MAAO,YAET,SAAY,CACZ,CACE4C,QAAS,sBACTE,QAAQ,EACR9B,OAAQ,CAEN,SAAY,CAAC,CACX4B,QAAS,uBACTC,YAAY,GACX,WACH,OAAU,0DAEV,SAAY,6FAEZ,YAAe,oBAGnB,CACED,QAAS,qCACTE,QAAQ,EACR9B,OAAQ,CACN,SAAY,oBAGhB,CACE4B,QAAS,cACTE,QAAQ,EACR9B,OAAQ,CACN,SAAY,mCACZ,YAAe,SACf,YAAe,CACb4B,QAASM,OAAO,QAAUkC,GAC1BvC,YAAY,EACZ7C,MAAO,cAGV,sBAEH,OAAU,wFAEZN,EAAMgB,UAAU4E,KAAO,CACrB,QAAW,CACT1C,QAAS,aACT5C,MAAO,aAET,QAAW,CACT4C,QAAS,kBACTC,YAAY,GAEd,gBAAiB,CAIjB,CAEED,QAAS,+CACTC,YAAY,EACZ7C,MAAO,YACN,CAED4C,QAAS,2BACT5C,MAAO,aAGT,gBAAiB,CACf4C,QAAS,sCACT5C,MAAO,WACP6C,YAAY,GAId,cAAe,CACbD,QAAS,gCACT5B,OAAQ,CACN,YAAe,CACb4B,QAASM,OAAO,uBAAyBkC,GACzCvC,YAAY,EACZ7C,MAAO,aAGXA,MAAO,WACP6C,YAAY,GAEd,OAAU,CACV,CACED,QAAS,qEACTC,YAAY,EACZC,QAAQ,EACR9B,OAAQqE,GAGV,CACEzC,QAAS,4EACTC,YAAY,EACZC,QAAQ,GAEV,CACEF,QAAS,wDACTE,QAAQ,EACR9B,OAAQqE,IAEV,YAAe,CACbzC,QAASM,OAAO,OAASkC,GACzBpF,MAAO,YAET,SAAYqF,EAAaE,SACzB,SAAY,CACV3C,QAAS,2/CACTC,YAAY,GAEd,QAAW,CACTD,QAAS,gHACTC,YAAY,GAGd,QAAW,CACTD,QAAS,6SACTC,YAAY,EAEZ7C,MAAO,cAET,QAAW,CACT4C,QAAS,iDACTC,YAAY,GAEd,kBAAmB,CACjBD,QAAS,UACT5C,MAAO,aAET,SAAY,CAEV4C,QAAS,6EACT5B,OAAQ,CACN,kBAAmB,CACjB4B,QAAS,MACT5C,MAAO,eAIb,YAAe,iCACf,OAAU,CACR4C,QAAS,qCACTC,YAAY,IAQhB,IAHA,IAAI2C,EAAa,CAAC,UAAW,gBAAiB,gBAAiB,cAAe,SAAU,cAAe,WAAY,UAAW,UAAW,UAAW,kBAAmB,WAAY,cAAe,UAC9LxE,EAASqE,EAAaE,SAAS,GAAGvE,OAE7B7D,EAAI,EAAGA,EAAIqI,EAAWtI,OAAQC,IACrC6D,EAAOwE,EAAWrI,IAAMuC,EAAMgB,UAAU4E,KAAKE,EAAWrI,IAG1DuC,EAAMgB,UAAU+E,MAAQ/F,EAAMgB,UAAU4E,KArK1C,CAsKG5F,GAIHA,EAAMgB,UAAUgF,MAAQ,CACtB,QAAW,CAAC,CACV9C,QAAS,kCACTC,YAAY,GACX,CACDD,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEV,OAAU,CACRF,QAAS,iDACTE,QAAQ,GAEV,aAAc,CACZF,QAAS,iGACTC,YAAY,EACZ7B,OAAQ,CACN2E,YAAa,UAGjB,QAAW,6GACX,QAAW,qBACX,SAAY,YACZ,OAAU,wDACV,SAAY,0DACZ,YAAe,iBAIjBjG,EAAMgB,UAAUkF,EAAIlG,EAAMgB,UAAUC,OAAO,QAAS,CAClD,aAAc,CACZiC,QAAS,4BACTC,YAAY,GAEd,QAAW,sUACX,SAAY,kDACZ,OAAU,0GAEZnD,EAAMgB,UAAUK,aAAa,IAAK,SAAU,CAC1C,MAAS,CAGP6B,QAAS,qDACTC,YAAY,EACZ7C,MAAO,WACPgB,OAAQ,CAEN,OAAU,CACR4B,QAAS,8CACTC,YAAY,GAGd,UAAa,CACXD,QAAS,4GACTC,YAAY,EACZ7C,MAAO,aAKb,SAAY,sIAEPN,EAAMgB,UAAUkF,EAAW,QAGlClG,EAAMgB,UAAUmF,IAAMnG,EAAMgB,UAAUC,OAAO,IAAK,CAChD,aAAc,CACZiC,QAAS,kCACTC,YAAY,GAEd,QAAW,8lBACX,OAAU,CACRD,QAAS,qIACTE,QAAQ,GAEV,SAAY,iHACZ,QAAW,uBAEbpD,EAAMgB,UAAUK,aAAa,MAAO,SAAU,CAC5C,aAAc,CACZ6B,QAAS,oCACT5C,MAAO,SACP8C,QAAQ,KAKZ,SAAWpD,GACT,IAAIoG,EAAS,gDACbpG,EAAMgB,UAAUqF,IAAM,CACpB,QAAW,mBACX,OAAU,CACRnD,QAAS,iCACT5B,OAAQ,CACN,KAAQ,YAIZ,IAAO,CACL4B,QAASM,OAAO,YAAc4C,EAAO3C,OAAS,kBAAmB,KACjEnC,OAAQ,CACN,SAAY,QACZ,YAAe,YAGnB,SAAYkC,OAAO,wBAA0B4C,EAAO3C,OAAS,kBAC7D,OAAU,CACRP,QAASkD,EACThD,QAAQ,GAEV,SAAY,+CACZ,UAAa,gBACb,SAAY,oBACZ,YAAe,aAEjBpD,EAAMgB,UAAUqF,IAAY,OAAE/E,OAAOmD,KAAOzE,EAAMgB,UAAUqF,IAC5D,IAAInB,EAASlF,EAAMgB,UAAUkE,OAEzBA,IACFA,EAAOJ,IAAIwB,WAAW,QAAS,OAC/BtG,EAAMgB,UAAUK,aAAa,SAAU,aAAc,CACnD,aAAc,CACZ6B,QAAS,6CACT5B,OAAQ,CACN,YAAa,CACX4B,QAAS,aACT5B,OAAQ4D,EAAOJ,IAAIxD,QAErB,YAAe,wBACf,aAAc,CACZ4B,QAAS,MACT5B,OAAQtB,EAAMgB,UAAUqF,MAG5B/F,MAAO,iBAER4E,EAAOJ,MAjDd,CAmDG9E,GAIHA,EAAMgB,UAAUqF,IAAIE,SAAW,CAC7BrD,QAASlD,EAAMgB,UAAUqF,IAAIE,SAC7BjF,OAAQ,CACN,iBAAkB,+DAClB,eAAgB,UAChB,MAAS,aACT,GAAM,YACN,UAAa,CACX4B,QAAS,kEACTE,QAAQ,EACR9B,OAAQ,CACN,YAAe,UACf,mBAAoB,CAClB4B,QAAS,aACTC,YAAY,EACZ7C,MAAO,WAET,UAAa,CACX4C,QAAS,kCACTC,YAAY,EACZ7B,OAAQ,CACN,YAAe,QAGnB,UAAa,CACX4B,QAAS,0BACTC,YAAY,GAEd,MAAS,CAAC,gDAAiD,CACzDD,QAAS,kCACTC,YAAY,IAEd,SAAY,cAGhB,OAAQ,CAAC,CACPD,QAAS,kDACTC,YAAY,EACZ7B,OAAQ,CACN,OAAU,SACV,SAAY,SAEb,CACD4B,QAAS,gCACTC,YAAY,IAEd,YAAe,SAGnBnD,EAAMgB,UAAUK,aAAa,MAAO,WAAY,CAC9C,SAAY,CACV6B,QAAS,8DACTC,YAAY,KAGhBnD,EAAMgB,UAAUK,aAAa,MAAO,WAAY,CAC9C,SAAY,CACV6B,QAAS,qBACTC,YAAY,GAEd,QAAW,iBACX,OAAU,kBACV,KAAQ,CACND,QAAS,mBACTC,YAAY,GAEd,OAAU,aAIZnD,EAAMgB,UAAUwF,WAAaxG,EAAMgB,UAAUC,OAAO,QAAS,CAC3D,aAAc,CAACjB,EAAMgB,UAAUgF,MAAM,cAAe,CAClD9C,QAAS,0FACTC,YAAY,IAEd,QAAW,CAAC,CACVD,QAAS,kCACTC,YAAY,GACX,CACDD,QAAS,6WACTC,YAAY,IAEd,OAAU,gOAEV,SAAY,oFACZ,SAAY,mGAEdnD,EAAMgB,UAAUwF,WAAW,cAAc,GAAGtD,QAAU,uEACtDlD,EAAMgB,UAAUK,aAAa,aAAc,UAAW,CACpD,MAAS,CACP6B,QAAS,2HACTC,YAAY,EACZC,QAAQ,GAGV,oBAAqB,CACnBF,QAAS,gKACT5C,MAAO,YAET,UAAa,CAAC,CACZ4C,QAAS,wGACTC,YAAY,EACZ7B,OAAQtB,EAAMgB,UAAUwF,YACvB,CACDtD,QAAS,gDACT5B,OAAQtB,EAAMgB,UAAUwF,YACvB,CACDtD,QAAS,oDACTC,YAAY,EACZ7B,OAAQtB,EAAMgB,UAAUwF,YACvB,CACDtD,QAAS,qcACTC,YAAY,EACZ7B,OAAQtB,EAAMgB,UAAUwF,aAE1B,SAAY,8BAEdxG,EAAMgB,UAAUK,aAAa,aAAc,SAAU,CACnD,kBAAmB,CACjB6B,QAAS,oEACTE,QAAQ,EACR9B,OAAQ,CACN,uBAAwB,CACtB4B,QAAS,QACT5C,MAAO,UAET,cAAiB,CACf4C,QAAS,6DACTC,YAAY,EACZ7B,OAAQ,CACN,4BAA6B,CAC3B4B,QAAS,UACT5C,MAAO,eAETmE,KAAMzE,EAAMgB,UAAUwF,aAG1B,OAAU,cAKZxG,EAAMgB,UAAUkE,QAClBlF,EAAMgB,UAAUkE,OAAOJ,IAAIwB,WAAW,SAAU,cAGlDtG,EAAMgB,UAAUyF,GAAKzG,EAAMgB,UAAUwF,WAGrC,SAAWxG,GACT,IAAIwG,EAAaxG,EAAMC,KAAKU,MAAMX,EAAMgB,UAAUwF,YAClDxG,EAAMgB,UAAU0F,IAAM1G,EAAMgB,UAAUC,OAAO,SAAUuF,GACvDxG,EAAMgB,UAAU0F,IAAI5B,IAAI5B,QAAU,4LAClClD,EAAMgB,UAAU0F,IAAI5B,IAAIxD,OAAY,IAAE4B,QAAU,kBAChDlD,EAAMgB,UAAU0F,IAAI5B,IAAIxD,OAAO,cAAc4B,QAAU,yDACvDlD,EAAMgB,UAAU0F,IAAI5B,IAAIxD,OAAY,IAAEA,OAAO,cAAgB,4BAC7DtB,EAAMgB,UAAUK,aAAa,SAAU,YAAa,CAClD,OAAU,CACR6B,QAAS,6CACT5B,OAAQ,CACN,YAAe,cACf,aAAc,SAGjBtB,EAAMgB,UAAU0F,IAAI5B,KACvB9E,EAAMgB,UAAUK,aAAa,SAAU,aAAc,CACnD,OAAU,CAER6B,QAAS,4CACT5B,OAAQ,CACN,qBAAsB,CACpB4B,QAAS,UACT5C,MAAO,eAETmE,KAAMzE,EAAMgB,UAAU0F,KAExB,MAAS,wBAEV1G,EAAMgB,UAAU0F,IAAI5B,KAEvB,IAAI6B,EAAiB,SAASA,EAAe7E,GAC3C,OAAKA,EAIgB,iBAAVA,EACFA,EAGoB,iBAAlBA,EAAMzB,QACRyB,EAAMzB,QAGRyB,EAAMzB,QAAQE,IAAIoG,GAAgB9B,KAAK,IAXrC,IA6EX7E,EAAMuE,MAAMC,IAAI,kBAAkB,SAAUlC,GACrB,QAAjBA,EAAID,UAAuC,QAAjBC,EAAID,UAhEnB,SAASuE,EAAWzG,GAGnC,IAFA,IAAI0G,EAAa,GAERpJ,EAAI,EAAGA,EAAI0C,EAAO3C,OAAQC,IAAK,CACtC,IAAIqE,EAAQ3B,EAAO1C,GACfqJ,GAAiB,EA+BrB,GA7BqB,iBAAVhF,IACU,QAAfA,EAAM1B,MAAkB0B,EAAMzB,QAAQ,IAAgC,QAA1ByB,EAAMzB,QAAQ,GAAGD,KAEnB,OAAxC0B,EAAMzB,QAAQ,GAAGA,QAAQ,GAAGA,QAE1BwG,EAAWrJ,OAAS,GAAKqJ,EAAWA,EAAWrJ,OAAS,GAAG2H,UAAYwB,EAAe7E,EAAMzB,QAAQ,GAAGA,QAAQ,KAEjHwG,EAAWE,MAG2C,OAApDjF,EAAMzB,QAAQyB,EAAMzB,QAAQ7C,OAAS,GAAG6C,SAE1CwG,EAAW1C,KAAK,CACdgB,QAASwB,EAAe7E,EAAMzB,QAAQ,GAAGA,QAAQ,IACjD2G,aAAc,IAIXH,EAAWrJ,OAAS,GAAoB,gBAAfsE,EAAM1B,MAA4C,MAAlB0B,EAAMzB,QAExEwG,EAAWA,EAAWrJ,OAAS,GAAGwJ,eACzBH,EAAWrJ,OAAS,GAAKqJ,EAAWA,EAAWrJ,OAAS,GAAGwJ,aAAe,GAAoB,gBAAflF,EAAM1B,MAA4C,MAAlB0B,EAAMzB,QAE9HwG,EAAWA,EAAWrJ,OAAS,GAAGwJ,eAElCF,GAAiB,IAIjBA,GAAmC,iBAAVhF,IACvB+E,EAAWrJ,OAAS,GAAwD,IAAnDqJ,EAAWA,EAAWrJ,OAAS,GAAGwJ,aAAoB,CAGjF,IAAIC,EAAYN,EAAe7E,GAE3BrE,EAAI0C,EAAO3C,OAAS,IAA+B,iBAAlB2C,EAAO1C,EAAI,IAA0C,eAAvB0C,EAAO1C,EAAI,GAAG2C,QAC/E6G,GAAaN,EAAexG,EAAO1C,EAAI,IACvC0C,EAAOkE,OAAO5G,EAAI,EAAG,IAGnBA,EAAI,IAA+B,iBAAlB0C,EAAO1C,EAAI,IAA0C,eAAvB0C,EAAO1C,EAAI,GAAG2C,QAC/D6G,EAAYN,EAAexG,EAAO1C,EAAI,IAAMwJ,EAC5C9G,EAAOkE,OAAO5G,EAAI,EAAG,GACrBA,KAGF0C,EAAO1C,GAAK,IAAIuC,EAAMD,MAAM,aAAckH,EAAW,KAAMA,GAI3DnF,EAAMzB,SAAoC,iBAAlByB,EAAMzB,SAChCuG,EAAW9E,EAAMzB,UAUrBuG,CAAWtE,EAAInC,WAnHnB,CAqHGH,GAIH,SAAWA,GACT,IAAIkH,EAAclH,EAAMgB,UAAUmG,YAAc,CAC9C,UAAa,CACXjE,QAAS,8DACTC,YAAY,GAEd,QAAW,CAGTD,QAAS,qDACTC,YAAY,GAEd,YAAe,QA2EjB3G,OAAOiD,eAAeyH,EAAa,aAAc,CAC/C1H,MAjBF,SAAoBwB,EAAWoG,GACJ,iBAAdpG,IACTA,EAAY,CAACA,IAGfA,EAAUF,SAAQ,SAAUM,IAvD9B,SAA2BA,EAAMa,GAC/B,IACIP,EAAU1B,EAAMgB,UAAUI,GAE9B,GAAKM,EAAL,CAIA,IAAII,EAAQJ,EAPI,eAShB,IAAKI,EAAO,CAEV,IAAIuF,EAAa,CACjB,cAAwB,CACtBnE,QAAS,wCACT5C,MAAO,YAGTwB,GADAJ,EAAU1B,EAAMgB,UAAUK,aAAaD,EAAM,UAAWiG,IAhB1C,eA2BhB,GAPIvF,aAAiB0B,SAEnB1B,EAAQJ,EAtBM,eAsBe,CAC3BwB,QAASpB,IAITrF,MAAMI,QAAQiF,GAChB,IAAK,IAAIrE,EAAI,EAAG6J,EAAIxF,EAAMtE,OAAQC,EAAI6J,EAAG7J,IACnCqE,EAAMrE,aAAc+F,SACtB1B,EAAMrE,GAAK,CACTyF,QAASpB,EAAMrE,KAInBwE,EAASH,EAAMrE,SAGjBwE,EAASH,IAiBTyF,CAAkBnG,GAAM,SAAU8B,GAC3BA,EAAQ5B,SACX4B,EAAQ5B,OAAS,IAGnB4B,EAAQ5B,OAAOmD,KAAO2C,WAQ5BF,EAAYM,WAAW,CAAC,OAAQ,aAAc,OAAQN,GA1FxD,CA2FGlH,GAIH,SAAWA,GACT,IAAIyH,EAAW,0aAEXC,EAAY,4BAChB1H,EAAMgB,UAAU2G,KAAO3H,EAAMgB,UAAUC,OAAO,QAAS,CACrD,aAAc,CAACyG,EAEf,mCACA,QAAWD,EACX,SAAY,CAACzH,EAAMgB,UAAUgF,MAAM4B,SAAU,CAC3C1E,QAAS,kBACTC,YAAY,IAEd,OAAU,mHACV,SAAY,CACVD,QAAS,gEACTC,YAAY,KAGhBnD,EAAMgB,UAAUK,aAAa,OAAQ,aAAc,CACjD,WAAc,CACZf,MAAO,cACP4C,QAAS,eACTC,YAAY,GAEd,UAAa,CACXD,QAAS,mIACTC,YAAY,EACZ7B,OAAQ,CACN,YAAe,OAGnB,SAAY,CACV4B,QAAS,sEACT5B,OAAQ,CACN,aAAcoG,EACd,QAAWD,EACX,YAAe,YACf,SAAY,YAtCpB,CA0CGzH,GAIH,SAAWA,GAQT,SAAS6H,EAAexF,EAAUO,GAChC,MAAO,MAAQP,EAASyF,cAAgBlF,EAAQ,MAGlDpG,OAAOuL,iBAAiB/H,EAAMgB,UAAU,qBAAuB,GAAI,CACjEgH,kBAAmB,CAYjBxI,MAAO,SAAe8C,EAAKD,EAAU4F,EAAoBC,GACvD,GAAI5F,EAAID,WAAaA,EAArB,CAIA,IAAI8F,EAAa7F,EAAI6F,WAAa,GAClC7F,EAAIC,KAAOD,EAAIC,KAAK/B,QAAQyH,GAAoB,SAAUxH,GACxD,GAA6B,mBAAlByH,IAAiCA,EAAczH,GACxD,OAAOA,EAMT,IAHA,IACI2H,EADA3K,EAAI0K,EAAW3K,QAGqD,IAAjE8E,EAAIC,KAAK8F,QAAQD,EAAcP,EAAexF,EAAU5E,OAC3DA,EAKJ,OADA0K,EAAW1K,GAAKgD,EACT2H,KAGT9F,EAAIZ,QAAU1B,EAAMgB,UAAUkE,UAGlCoD,qBAAsB,CAOpB9I,MAAO,SAAe8C,EAAKD,GACzB,GAAIC,EAAID,WAAaA,GAAaC,EAAI6F,WAAtC,CAKA7F,EAAIZ,QAAU1B,EAAMgB,UAAUqB,GAC9B,IAAIY,EAAI,EACJ7E,EAAO5B,OAAO4B,KAAKkE,EAAI6F,aAE3B,SAASvB,EAAWzG,GAClB,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAO3C,UAErByF,GAAK7E,EAAKZ,QAFmBC,IAAK,CAMtC,IAAIqE,EAAQ3B,EAAO1C,GAEnB,GAAqB,iBAAVqE,GAAsBA,EAAMzB,SAAoC,iBAAlByB,EAAMzB,QAAsB,CACnF,IAAI0D,EAAI3F,EAAK6E,GACTsF,EAAIjG,EAAI6F,WAAWpE,GACnByE,EAAqB,iBAAV1G,EAAqBA,EAAQA,EAAMzB,QAC9C+H,EAAcP,EAAexF,EAAU0B,GACvCnB,EAAQ4F,EAAEH,QAAQD,GAEtB,GAAIxF,GAAS,EAAG,GACZK,EACF,IAAI1B,EAASiH,EAAEC,UAAU,EAAG7F,GACxB8F,EAAS,IAAI1I,EAAMD,MAAMsC,EAAUrC,EAAMwC,SAAS+F,EAAGjG,EAAIZ,SAAU,YAAcW,EAAUkG,GAC3FtE,EAAQuE,EAAEC,UAAU7F,EAAQwF,EAAY5K,QACxCmL,EAAc,GAEdpH,GACFoH,EAAYxE,KAAKG,MAAMqE,EAAa/B,EAAW,CAACrF,KAGlDoH,EAAYxE,KAAKuE,GAEbzE,GACF0E,EAAYxE,KAAKG,MAAMqE,EAAa/B,EAAW,CAAC3C,KAG7B,iBAAVnC,EACT3B,EAAOkE,OAAOC,MAAMnE,EAAQ,CAAC1C,EAAG,GAAGmL,OAAOD,IAE1C7G,EAAMzB,QAAUsI,QAGX7G,EAAMzB,SAGbuG,EAAW9E,EAAMzB,SAIvB,OAAOF,EAGTyG,CAAWtE,EAAInC,aArHvB,CAyHGH,GAiBH,SAAWA,GACTA,EAAMgB,UAAU6H,IAAM7I,EAAMgB,UAAUC,OAAO,QAAS,CACpD,QAAW,ueACX,QAAW,CACTiC,QAAS,sBACT5C,MAAO,YAET,SAAY,CAAC,uBAAwB,iBACrC,QAAW,CACT4C,QAAS,uCACTC,YAAY,KAGhBnD,EAAMgB,UAAUK,aAAa,MAAO,SAAU,CAC5C,gBAAiB,CACf6B,QAAS,eACTC,YAAY,EACZ7C,MAAO,aAGXN,EAAMgB,UAAUK,aAAa,MAAO,UAAW,CAC7C,UAAa,CACX6B,QAAS,6BACT5C,MAAO,eAGXN,EAAMgB,UAAUK,aAAa,MAAO,UAAW,CAC7C,SAAY,sBACZ,QAAW,CACT6B,QAAS,kCACTC,YAAY,EACZ7B,OAAQ,CACN2E,YAAa,SAKnBjG,EAAMgB,UAAUK,aAAa,MAAO,WAAY,CAC9C,SAAY,CACV6B,QAAS,YACTC,YAAY,KAGhB,IAAI2F,EAAuB,CACzB5F,QAAS,6EACTC,YAAY,EACZ7B,OAAQ,CACNmD,KAAMzE,EAAMgB,UAAU6H,MAG1B7I,EAAMgB,UAAUK,aAAa,MAAO,SAAU,CAC5C,gBAAiB,CACf6B,QAAS,kDACTE,QAAQ,EACR9C,MAAO,SACPgB,OAAQ,CACN,UAAa,CACX4B,QAAS,2BACT5C,MAAO,SACPgB,OAAQ,CACN,YAAe,mBAKvB,iBAAkB,CAChB4B,QAAS,sGACTE,QAAQ,EACR9C,MAAO,SACPgB,OAAQ,CACN,UAAa,CACX4B,QAAS,yCACT5C,MAAO,SACPgB,OAAQ,CACN,YAAe,iBAGnB,cAAiBwH,IAIrB,uBAAwB,CACtB5F,QAAS,yBACTE,QAAQ,EACR9C,MAAO,UAET,uBAAwB,CACtB4C,QAAS,yBACTE,QAAQ,EACR9C,MAAO,SACPgB,OAAQ,CACN,cAAiBwH,aAMhB9I,EAAMgB,UAAU6H,IAAY,OACnC7I,EAAMuE,MAAMC,IAAI,mBAAmB,SAAUlC,GAC3C,GAAK,MAAMtD,KAAKsD,EAAIC,MAApB,CAKAvC,EAAMgB,UAAU,qBAAqBgH,kBAAkB1F,EAAK,MAD3C,sIAGnBtC,EAAMuE,MAAMC,IAAI,kBAAkB,SAAUlC,GAC1CtC,EAAMgB,UAAU,qBAAqBsH,qBAAqBhG,EAAK,UA3GnE,CA6GGtC,GAIH,SAAWA,GACT,IAAIwG,EAAaxG,EAAMgB,UAAUwF,WAC7BpG,EAAO,qCAAqCqD,OAC5CsF,EAAkB,2CAA6C3I,EAAO,UAC1EJ,EAAMgB,UAAUgI,MAAQhJ,EAAMgB,UAAUC,OAAO,cAAe,CAC5D,UAAa,CAEXiC,QAASM,OAAOuF,EAAkB,6BAA6BtF,QAC/DN,YAAY,EACZ7B,OAAQ,CACN,YAAe,SAIrBtB,EAAMgB,UAAUK,aAAa,QAAS,UAAW,CAC/C,qBAAsB,CAEpB6B,QAASM,OAAOuF,EAAkB,8CAA8CtF,QAChFN,YAAY,EACZ7B,OAAQ,CACN,UAAa,CACX4B,QAAS,2BACTC,YAAY,EACZ7B,OAAQ,CACN,YAAe,OAGnB,KAAQ,CACN4B,QAAS,oBACTC,YAAY,EACZ7B,OAAQkF,EACRlG,MAAO,uBAET,YAAe,WAGnB,aAAc,CAAC,CACb4C,QAASM,OAAO,gBAAkBpD,GAClC+C,YAAY,EACZ7B,OAAQ,CACN,YAAe,sBAEhB,CACD4B,QAAS,oFACTC,YAAY,EACZ7B,OAAQ,CACN,YAAe,QAGnB,QAAW,CACT4B,QAAS,mDACTC,YAAY,EACZ7B,OAAQ,CACN,KAAQ,CACN4B,QAAS,uBACTC,YAAY,EACZ7B,OAAQkF,EACRlG,MAAO,2BAKfN,EAAMgB,UAAUmG,YAAYK,WAAW,aAAcxH,EAAMgB,UAAUgI,OA9DvE,CA+DGhJ,GAIHA,EAAMgB,UAAUiI,aAAejJ,EAAMgB,UAAUC,OAAO,aAAc,CAClE,QAAW,8UACX,SAAY,8DAEdjB,EAAMgB,UAAUiI,aAAa,cAAc3I,MAAQ,WAE/CN,EAAMgB,UAAUkE,QAClBlF,EAAMgB,UAAUK,aAAa,eAAgB,SAAU,CACrD,IAAO,CACL6B,QAAS,4EACTC,YAAY,EACZ7B,OAAQ,CACNmD,KAAMzE,EAAMgB,UAAUkE,WAQ9B,SAAWlF,GAET,IAAIkJ,EAAU,YACVC,EAAgB,CAClBjG,QAAS,aACT5C,MAAO,YAETN,EAAMgB,UAAUoI,aAAepJ,EAAMgB,UAAUC,OAAO,aAAc,CAClE,QAAWiI,EACX,OAAU,CACV,CACEhG,QAAS,yBACTE,QAAQ,GACP,CAEDF,QAAS,yBACTE,QAAQ,EACR9B,OAAQ,CACN,cAAiB6H,KAGrB,QAAW,mSACX,eAAgB,CACdjG,QAAS,aACT5C,MAAO,cAGXN,EAAMgB,UAAUK,aAAa,eAAgB,UAAW,CACtD,oBAAqB,CACnB6B,QAAS,iBACT5C,MAAO,WAGT,cAAe,CACb4C,QAAS,qBACT5C,MAAO,QACPgB,OAAQ,CACN,QAAW4H,EACX,cAAiBC,MAIvBnJ,EAAMgB,UAAUK,aAAa,eAAgB,SAAU,CACrD,oBAAqB,CACnB6B,QAAS,yBACT5B,OAAQ,CACN,UAAa,CACX4B,QAAS,QACT5C,MAAO,eAETmE,KAAMzE,EAAMgB,UAAUwF,aAI1B,mBAAoB,CAAC,CACnBtD,QAAS,iBACTE,QAAQ,EACR9C,MAAO,UACN,CACD4C,QAAS,iBACTE,QAAQ,EACR9C,MAAO,SACPgB,OAAQ,CACN6H,cAAeA,OAIrBnJ,EAAMgB,UAAUK,aAAa,eAAgB,UAAW,CAEtD,SAAY,kCAEPrB,EAAMgB,UAAUoI,aAAa,mBACpCpJ,EAAMgB,UAAUqI,OAASrJ,EAAMgB,UAAUoI,aAxE3C,CAyEGpJ,GAIH,SAAWA,GACTA,EAAMgB,UAAUK,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjB6B,QAASM,OAAO,YAAcxD,EAAMgB,UAAUwF,WAAW,qBAAqBtD,QAAQO,QACtFN,YAAY,EACZ7C,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDN,EAAMgB,UAAUK,aAAa,aAAc,WAAY,CACrD,OAAU,CACR6B,QAASM,OAAO,YAAcxD,EAAMgB,UAAUwF,WAAqB,SAAE/C,QACrEN,YAAY,EACZ7C,MAAO,CAAC,WAAY,sBAGxBN,EAAMgB,UAAUK,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAAC,CAGnB6B,QAAS,yOACT5C,MAAO,cACN,CAED4C,QAAS,wBACT5C,MAAO,iBAGXN,EAAMgB,UAAUwF,WAAoB,QAAE8C,QAAQ,CAC5CpG,QAAS,wCACT5C,MAAO,UACN,CACD4C,QAAS,WACT5C,MAAO,CAAC,OAAQ,QACf,CACD4C,QAAS,gBACT5C,MAAO,QAETN,EAAMgB,UAAUK,aAAa,aAAc,WAAY,CACrD,OAAU,CACR6B,QAAS,QACT5C,MAAO,YAET,MAAS,CACP4C,QAAS,KACT5C,MAAO,cAGXN,EAAMgB,UAAUK,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjB6B,QAAS,kDACTC,YAAY,GAEd,mBAAoB,CAClBD,QAAS,8CACTC,YAAY,GAEd,IAAO,CAELD,QAAS,kFACT5C,MAAO,YAET,QAAW,CACT4C,QAAS,qBACT5C,MAAO,gBAMX,IAFA,IAAIiJ,EAAuB,CAAC,WAAY,oBAAqB,SAAU,kBAAmB,mBAEjF9L,EAAI,EAAGA,EAAI8L,EAAqB/L,OAAQC,IAAK,CACpD,IAAIqE,EAAQyH,EAAqB9L,GAC7B+B,EAAQQ,EAAMgB,UAAUwF,WAAW1E,GAER,WAA3B9B,EAAMC,KAAKG,KAAKZ,KAClBA,EAAQQ,EAAMgB,UAAUwF,WAAW1E,GAAS,CAC1CoB,QAAS1D,IAKb,IAAI8B,EAAS9B,EAAM8B,QAAU,GAC7B9B,EAAM8B,OAASA,EACfA,EAAO,oBAAsB,iBAlFjC,CAoFGtB,GAIH,SAAWA,GACTA,EAAMgB,UAAUwI,KAAOxJ,EAAMgB,UAAUC,OAAO,aAAc,IAC5DjB,EAAMgB,UAAUK,aAAa,OAAQ,UAAW,CAC9C,KAAQ,CAAC,CACP6B,QAAS,sEACT5C,MAAO,UAGXN,EAAMgB,UAAUwI,KAAK,qBAAqBtG,QAAU,8IAC7ClD,EAAMgB,UAAUwI,KAAgB,UACvCxJ,EAAMgB,UAAUK,aAAa,OAAQ,WAAY,CAC/C,mBAAoB,CAClB6B,QAAS,YACT5C,MAAO,iBAIN7D,MAAMI,QAAQmD,EAAMgB,UAAUwI,KAAKC,WACtCzJ,EAAMgB,UAAUwI,KAAKC,QAAU,CAACzJ,EAAMgB,UAAUwI,KAAKC,UAGvDzJ,EAAMgB,UAAUwI,KAAKC,QAAQH,QAAQ,CACnCpG,QAAS,kDACTC,YAAY,GACX,CACDD,QAAS,wGACTC,YAAY,IA1BhB,CA4BGnD,GAIHA,EAAMgB,UAAU0I,KAAO1J,EAAMgB,UAAUC,OAAO,aAAc,CAE1D,QAAW,oXAEbjB,EAAMgB,UAAUK,aAAa,OAAQ,WAAY,CAE/C,WAAc,CACZ6B,QAAS,QACT5C,MAAO,cAGXN,EAAMgB,UAAU2I,MAAQ3J,EAAMgB,UAAU0I,KAGxC1J,EAAMgB,UAAU4I,WAAa5J,EAAMgB,UAAUC,OAAO,aAAc,CAEhE,QAAW,2YACX,QAAW,0FAEbjB,EAAMgB,UAAU6I,GAAK7J,EAAMgB,UAAU4I,WAGrC,SAAW5J,GACT,IAAI8J,EAAiB9J,EAAMgB,UAAUwF,WAAW,mBAE5CuD,EAAyBD,EAAe5G,QAAQO,OAChDuG,EAAsBF,EAAexI,OAAsB,cAC3D2I,EAAiCD,EAAoB1I,OAAO,6BAC5D4I,EAAuBF,EAAoB9G,QAAQO,OAavD,SAAS0G,EAAe9H,EAAUyC,GAChC,GAAK9E,EAAMgB,UAAUqB,GAIrB,MAAO,CACLa,QAASM,OAAO,OAASsB,EAAM,SAAWiF,GAC1C5G,YAAY,EACZC,QAAQ,EACR9B,OAAQ,CACN,uBAAwB,CACtB4B,QAAS,QACT5C,MAAO,UAET,gBAAiB,CACf4C,QAAS,UACT5C,MAAO+B,KAyBf,SAASwF,EAAeuC,EAAS/H,GAC/B,MAAO,MAAQA,EAASyF,cAAgB,IAAMsC,EAAU,MAY1D,SAASC,EAAkB9H,EAAMb,EAASW,GACxC,IAAIC,EAAM,CACRC,KAAMA,EACNb,QAASA,EACTW,SAAUA,GAKZ,OAHArC,EAAMuE,MAAM+F,IAAI,kBAAmBhI,GACnCA,EAAInC,OAASH,EAAMwC,SAASF,EAAIC,KAAMD,EAAIZ,SAC1C1B,EAAMuE,MAAM+F,IAAI,iBAAkBhI,GAC3BA,EAAInC,OAUb,SAASoK,EAAgCC,GACvC,IAAIC,EAAc,GAClBA,EAAY,6BAA+BR,EAG3C,IAAI9J,EAASH,EAAMwC,SAASgI,EAAYC,GAExC,GAAsB,IAAlBtK,EAAO3C,OAAc,CASvB,IAAI0G,EAAO,CAAC,EAAG,GACfA,EAAKC,KAAKG,MAAMJ,EAAMmG,EAAkBlK,EAAO,GAAIH,EAAMgB,UAAUwF,WAAY,eAC/ErG,EAAOkE,OAAOC,MAAMnE,EAAQ+D,GAG9B,OAAO,IAAIlE,EAAMD,MAAM,gBAAiBI,EAAQ6J,EAAoB1J,MAAOkK,GAqB7E,SAASE,EAAiBnI,EAAMb,EAASW,GAKvC,IAAIsI,EAAU3K,EAAMwC,SAASD,EAAM,CACjC,cAAiB,CACfW,QAASM,OAAO0G,GAChB/G,YAAY,KAKZyH,EAAqB,EAGrBC,EAAiB,GAiBjBC,EAAiBT,EAfFM,EAAQpK,KAAI,SAAUuB,GACvC,GAAqB,iBAAVA,EACT,OAAOA,EAKP,IAHA,IACIsG,EADA2C,EAA0BjJ,EAAMzB,SAGmD,IAAhFkC,EAAK8F,QAAQD,EAAcP,EAAe+C,IAAsBvI,MAGvE,OADAwI,EAAezC,GAAe2C,EACvB3C,KAERvD,KAAK,IAG6CnD,EAASW,GAE1D2I,EAAexO,OAAO4B,KAAKyM,GA8D/B,OA7DAD,EAAqB,EAOrB,SAAShE,EAAWzG,GAClB,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAO3C,OAAQC,IAAK,CACtC,GAAImN,GAAsBI,EAAaxN,OACrC,OAGF,IAAIsE,EAAQ3B,EAAO1C,GAEnB,GAAqB,iBAAVqE,GAA+C,iBAAlBA,EAAMzB,QAAsB,CAClE,IAAI+H,EAAc4C,EAAaJ,GAC3BpC,EAAqB,iBAAV1G,EAAqBA,EAEpCA,EAAMzB,QACFuC,EAAQ4F,EAAEH,QAAQD,GAEtB,IAAe,IAAXxF,EAAc,GACdgI,EACF,IAAIrJ,EAASiH,EAAEC,UAAU,EAAG7F,GACxB8F,EAAS6B,EAAgCM,EAAezC,IACxDnE,EAAQuE,EAAEC,UAAU7F,EAAQwF,EAAY5K,QACxCmL,EAAc,GAQlB,GANIpH,GACFoH,EAAYxE,KAAK5C,GAGnBoH,EAAYxE,KAAKuE,GAEbzE,EAAO,CACT,IAAIgH,EAAc,CAAChH,GACnB2C,EAAWqE,GACXtC,EAAYxE,KAAKG,MAAMqE,EAAasC,GAGjB,iBAAVnJ,GACT3B,EAAOkE,OAAOC,MAAMnE,EAAQ,CAAC1C,EAAG,GAAGmL,OAAOD,IAC1ClL,GAAKkL,EAAYnL,OAAS,GAE1BsE,EAAMzB,QAAUsI,OAGf,CACL,IAAItI,EAAUyB,EAAMzB,QAEhB5D,MAAMI,QAAQwD,GAChBuG,EAAWvG,GAEXuG,EAAW,CAACvG,MAMpBuG,CAAWkE,GACJ,IAAI9K,EAAMD,MAAMsC,EAAUyI,EAAgB,YAAczI,EAAUE,GA9L3EvC,EAAMgB,UAAUwF,WAAW,mBAAqB,CAIhD2D,EAAe,MAAO,0HAA0H1G,QAEhJ0G,EAAe,OAAQ,yCAAyC1G,QAChE0G,EAAe,MAAO,QAAQ1G,QAC9B0G,EAAe,WAAY,oBAAoB1G,QAC/C0G,EAAe,UAAW,6CAA6C1G,QACvEqG,GAAgBoB,OAAOC,SA6LvB,IAAIC,EAAqB,CACvB,YAAc,EACd,IAAM,EACN,YAAc,EACd,IAAM,EACN,KAAO,EACP,KAAO,GA8ET,SAASC,EAAc7L,GACrB,MAAqB,iBAAVA,EACFA,EACE/C,MAAMI,QAAQ2C,GAChBA,EAAMe,IAAI8K,GAAexG,KAAK,IAE9BwG,EAAc7L,EAAMa,SAlF/BL,EAAMuE,MAAMC,IAAI,kBAAkB,SAAUlC,GACpCA,EAAID,YAAY+I,GAWtB,SAASE,EAAoBnL,GAC3B,IAAK,IAAI1C,EAAI,EAAG6J,EAAInH,EAAO3C,OAAQC,EAAI6J,EAAG7J,IAAK,CAC7C,IAAIqE,EAAQ3B,EAAO1C,GAEnB,GAAqB,iBAAVqE,EAAX,CAIA,IAAIzB,EAAUyB,EAAMzB,QAEpB,GAAK5D,MAAMI,QAAQwD,GAQnB,GAAmB,oBAAfyB,EAAM1B,KAA4B,CAepC,IAAImL,EAAWlL,EAAQ,GAEvB,GAAuB,IAAnBA,EAAQ7C,QAAoC,iBAAb+N,GAA2C,kBAAlBA,EAASnL,KAA0B,CAE7F,IAAImC,EAAO8I,EAAcE,GACrBjL,EAAQiL,EAASjL,MACjB+B,EAAW5F,MAAMI,QAAQyD,GAASA,EAAM,GAAKA,EAC7CoB,EAAU1B,EAAMgB,UAAUqB,GAE9B,IAAKX,EAEH,SAGFrB,EAAQ,GAAKqK,EAAiBnI,EAAMb,EAASW,SAG/CiJ,EAAoBjL,OAvCG,iBAAZA,GACTiL,EAAoB,CAACjL,MA2C7BiL,CAAoBhJ,EAAInC,WA3T5B,CA6UGH,GAIHA,EAAMgB,UAAUwK,QAAU,CACxB,QAAW,MACX,OAAU,CACRtI,QAAS,wBACTE,QAAQ,GAEV,OAAU,2CACV,QAAW,qBACX,SAAY,eACZ,UAAa,CACXF,QAAS,cACT5C,MAAO,YAET,YAAa,CACX4C,QAAS,+DACTE,QAAQ,GAEV,aAAc,CACZF,QAAS,wEACTC,YAAY,GAEd,SAAY,CACVD,QAAS,+CACTC,YAAY,EACZ7C,MAAO,YAET,QAAW,8FACX,SAAY,cACZ,YAAe,iBACf,SAAY,8BAId,SAAWN,GAET,IAAIyL,EAAQ,6CAA6ChI,OAazD,SAASiI,EAAaxI,EAASyI,GAO7B,OANAzI,EAAUA,EAAQ1C,QAAQ,WAAYiL,GAElCE,IACFzI,EAAUA,EAAU,IAAMA,EAAQ1C,QAAQ,KAAM,QAG3CgD,OAAO,0BAA0BC,OAAS,MAAQP,EAAU,KAGrE,IAAI0I,EAAY,2CAA2CnI,OACvDoI,EAAW,sCAAsCpI,OAAOjD,QAAQ,MAAOoL,GACvEE,EAAY,sEAAsErI,OACtFzD,EAAMgB,UAAU+K,SAAW/L,EAAMgB,UAAUC,OAAO,SAAU,IAC5DjB,EAAMgB,UAAUK,aAAa,WAAY,SAAU,CACjD,WAAc,CAEZ6B,QAAS,kBACT5C,MAAO,eAET,MAAS,CACP4C,QAASM,OAAO,IAAMqI,EAAWC,EAAY,MAAQD,EAAW,KAAM,KACtEvK,OAAQ,CACN,kBAAmB,CACjB4B,QAASM,OAAO,KAAOqI,EAAWC,EAAY,OAASD,EAAW,OAClE1I,YAAY,EACZ7B,OAAQ,CACN,aAAc,CACZ4B,QAASM,OAAOoI,GAChBtK,OAAQtB,EAAMgB,UAAU+K,UAE1B,YAAe,OAGnB,aAAc,CACZ7I,QAASM,OAAO,KAAOqI,EAAW,IAAMC,EAAY,KACpD3I,YAAY,EACZ7B,OAAQ,CACN,YAAe,iBAGnB,mBAAoB,CAClB4B,QAASM,OAAO,IAAMqI,EAAW,KACjCvK,OAAQ,CACN,eAAgB,CACd4B,QAASM,OAAOoI,GAChBtL,MAAO,YACPgB,OAAQtB,EAAMgB,UAAU+K,UAE1B,YAAe,SAKvB,KAAQ,CAAC,CAEP7I,QAAS,oEACTC,YAAY,EACZ7C,MAAO,WACN,CAGD4C,QAAS,sBACT5C,MAAO,WACN,CAID4C,QAAS,qBACTE,QAAQ,EACR9B,OAAQ,CACN,aAAc,CACZ4B,QAAS,qDACTC,YAAY,GAEd,gBAAiB,CACfD,QAAS,WACTC,YAAY,GAEd,YAAe,SAGnB,MAAS,CAAC,CAKRD,QAAS,0CACT5C,MAAO,YACPgB,OAAQ,CACN2E,YAAa,cAEd,CAGD/C,QAAS,cACTC,YAAY,EACZ7C,MAAO,YACPgB,OAAQ,CACN2E,YAAa,aAGjB,GAAM,CAKJ/C,QAAS,wCACTC,YAAY,EACZ7C,MAAO,eAET,KAAQ,CAKN4C,QAAS,mCACTC,YAAY,EACZ7C,MAAO,eAET,gBAAiB,CAKf4C,QAAS,qHACT5B,OAAQ,CACN,SAAY,CACV4B,QAAS,gBACTC,YAAY,GAEd,OAAU,+DACV,YAAe,kBAEjB7C,MAAO,OAET,KAAQ,CAIN4C,QAASwI,EAAa,4CAA4CjI,QAAQ,GAC1EN,YAAY,EACZC,QAAQ,EACR9B,OAAQ,CACN,QAAW,CACT4B,QAAS,sBACTC,YAAY,EACZ7B,OAAQ,IAGV,YAAe,YAGnB,OAAU,CAIR4B,QAASwI,EAAa,4CAA4CjI,QAAQ,GAC1EN,YAAY,EACZC,QAAQ,EACR9B,OAAQ,CACN,QAAW,CACT4B,QAAS,oBACTC,YAAY,EACZ7B,OAAQ,IAGV,YAAe,SAGnB,OAAU,CAGR4B,QAASwI,EAAa,4BAA4BjI,QAAQ,GAC1DN,YAAY,EACZC,QAAQ,EACR9B,OAAQ,CACN,QAAW,CACT4B,QAAS,uBACTC,YAAY,EACZ7B,OAAQ,IAGV,YAAe,QAGnB,IAAO,CAIL4B,QAASwI,EAAa,+FAA+FjI,QAAQ,GAC7HN,YAAY,EACZC,QAAQ,EACR9B,OAAQ,CACN,SAAY,CACV4B,QAAS,oBACTC,YAAY,GAEd,QAAW,CACTD,QAAS,sBACTC,YAAY,EACZ7B,OAAQ,IAGV,OAAU,CACR4B,QAAS,gCAKjB,CAAC,MAAO,OAAQ,SAAU,UAAUpC,SAAQ,SAAUgB,GACpD,CAAC,MAAO,OAAQ,SAAU,UAAUhB,SAAQ,SAAUQ,GAChDQ,IAAUR,IACZtB,EAAMgB,UAAU+K,SAASjK,GAAOR,OAAOjB,QAAQiB,OAAOA,GAAUtB,EAAMgB,UAAU+K,SAASzK,UAI/FtB,EAAMuE,MAAMC,IAAI,kBAAkB,SAAUlC,GACrB,aAAjBA,EAAID,UAA4C,OAAjBC,EAAID,UAIvC,SAASuE,EAAWzG,GAClB,GAAKA,GAA4B,iBAAXA,EAItB,IAAK,IAAI1C,EAAI,EAAG6J,EAAInH,EAAO3C,OAAQC,EAAI6J,EAAG7J,IAAK,CAC7C,IAAIqE,EAAQ3B,EAAO1C,GAEnB,GAAmB,SAAfqE,EAAM1B,KAAV,CAmBA,IAAI4L,EAAWlK,EAAMzB,QAAQ,GACzB4L,EAAYnK,EAAMzB,QAAQ,GAE9B,GAAI2L,GAAYC,GAA+B,kBAAlBD,EAAS5L,MAA+C,eAAnB6L,EAAU7L,MAAqD,iBAArB4L,EAAS3L,QAAsB,CAEzI,IAAIC,EAAQ,YAAc0L,EAAS3L,QAAQ6L,OAAOC,MAAM,OAAO,GAAGC,cAE7DH,EAAU3L,MAEuB,iBAApB2L,EAAU3L,MAC1B2L,EAAU3L,MAAQ,CAAC2L,EAAU3L,MAAOA,GAEpC2L,EAAU3L,MAAM6D,KAAK7D,GAJrB2L,EAAU3L,MAAQ,CAACA,SA1BrBsG,EAAW9E,EAAMzB,UAoCvBuG,CAAWtE,EAAInC,WAEjBH,EAAMuE,MAAMC,IAAI,QAAQ,SAAUlC,GAChC,GAAiB,eAAbA,EAAIlC,KAAR,CAMA,IAFA,IAAI4L,EAAW,GAENvO,EAAI,EAAG6J,EAAIhF,EAAIyC,QAAQvH,OAAQC,EAAI6J,EAAG7J,IAAK,CAClD,IAAI4O,EAAM/J,EAAIyC,QAAQtH,GAClBgD,EAAQ,gBAAgBoD,KAAKwI,GAEjC,GAAI5L,EAAO,CACTuL,EAAWvL,EAAM,GACjB,OAIJ,IAAIiB,EAAU1B,EAAMgB,UAAUgL,GAE9B,GAAKtK,EAYE,CAEL,IAAIa,EAAOD,EAAIjC,QAAQG,QAAQ,QAAS,KAAKA,QAAQ,SAAU,KAC/D8B,EAAIjC,QAAUL,EAAMmC,UAAUI,EAAMb,EAASsK,QAd7C,GAAIA,GAAyB,SAAbA,GAAuBhM,EAAMkC,QAAQoK,WAAY,CAC/D,IAAIpL,EAAK,OAAQ,IAAI7B,MAAOkN,UAAY,IAAMC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC9DpK,EAAI0C,WAAe,GAAI9D,EACvBlB,EAAMkC,QAAQoK,WAAWK,cAAcX,GAAU,WAC/C,IAAIY,EAAMC,SAASC,eAAe5L,GAE9B0L,IACFA,EAAIG,UAAY/M,EAAMmC,UAAUyK,EAAII,YAAahN,EAAMgB,UAAUgL,GAAWA,YAUtFhM,EAAMgB,UAAUiM,GAAKjN,EAAMgB,UAAU+K,SAjUvC,CAkUG/L,GAIH,SAAWA,GACTA,EAAMgB,UAAUkM,KAAO,CACrB,MAAS,CACT,4BACA,YACA,aASF,IAAIC,EAAW,CACb,eAAgB,IAChB,gBAAiB,IACjB,gBAAiB,IACjB,iBAAkB,IAClB,UAAa,IACb,KAAQ,KAGV3Q,OAAO4B,KAAK+O,GAAUrM,SAAQ,SAAU/B,GACtC,IAAIqO,EAASD,EAASpO,GAClBuB,EAAQ,GAEP,QAAQtB,KAAKD,IAEhBuB,EAAM6D,KAAK,MAAMN,KAAK9E,GAAM,IAGjB,SAATA,GACFuB,EAAM6D,KAAK,QAGbnE,EAAMgB,UAAUkM,KAAKnO,GAAQ,CAE3BmE,QAASM,OAAO,QAAU4J,EAAS,iCAAkC,KACrE9M,MAAOA,MAIX9D,OAAOiD,eAAeO,EAAMgB,UAAUkM,KAAM,WAAY,CACtD1N,MAAO2N,IA5CX,CA8CGnN,GAIHA,EAAMgB,UAAUqM,IAAM,CAUpB,QAAW,QAKX,QAAW,WACX,SAAY,SAKZ,OAAU,mCAOV,QAAW,CACTnK,QAAS,iBACT5B,OAAQ,CAON,UAAa,cAiBjB,MAAS,YAYT,YAAe,oBAIjBtB,EAAMgB,UAAUsM,GAAKtN,EAAMgB,UAAUC,OAAO,QAAS,CACnD,QAAW,sKACX,QAAW,2LACX,QAAW,gCACX,SAAY,wFACZ,OAAU,4DACV,OAAU,CACRiC,QAAS,mCACTE,QAAQ,YAGLpD,EAAMgB,UAAUsM,GAAG,cAG1B,SAAWtN,GACTA,EAAMgB,UAAUuM,WAAa,CAC3B,QAAW,oBACX,UAAa,CACXrK,QAAS,qBACT5C,MAAO,eAET,OAAU,mCACV,OAAU,6DACV,QAAW,qBACX,MAAS,CACP4C,QAAS,wCACTC,YAAY,EACZ7C,MAAO,WAET,SAAY,CACV4C,QAAS,aACT5B,OAAQ,CACN2E,YAAa,QACbJ,SAAU,YAGd,YAAe,oCACf,SAAY,yCAEd7F,EAAMuE,MAAMC,IAAI,mBAAmB,SAAUlC,GAE3CtC,EAAMgB,UAAU,qBAAqBgH,kBAAkB1F,EAAK,aADpC,6CAG1BtC,EAAMuE,MAAMC,IAAI,kBAAkB,SAAUlC,GAC1CtC,EAAMgB,UAAU,qBAAqBsH,qBAAqBhG,EAAK,iBA9BnE,CAgCGtC,GAIHA,EAAMgB,UAAUwM,KAAO,CACrB,SAAY,CACVtK,QAAS,gCACTE,QAAQ,GAEV,OAAU,CACRF,QAAS,gCACTE,QAAQ,GAEV,QAAW,gCACX,OAAU,2BACV,YAAe,WACf,SAAY,IACZ,QAAW,qBACX,KAAQ,CACNF,QAAS,WACT5C,MAAO,YAaXN,EAAMgB,UAAUyM,KAAOzN,EAAMgB,UAAUC,OAAO,MAAO,CACnD,QAAW,CAAC,mBAAoB,CAC9BiC,QAAS,kBACTC,YAAY,IAEd,OAAU,CACRD,QAAS,8CACT5B,OAAQ,CACN,YAAe,UAInB,SAAY,CACV4B,QAAS,yEACT5B,OAAQ,CAEN,SAAY,aAGhB,SAAY,2CACZ,SAAY,aAEdtB,EAAMgB,UAAUK,aAAa,OAAQ,WAAY,CAC/C,SAAY,CACZ,CACE6B,QAAS,cACT5B,OAAQ,CACN,YAAe,MAGnB,aACA,cAAe,CACb4B,QAAS,uCACTC,YAAY,EACZ7C,MAAO,cAKXN,EAAMgB,UAAU0M,SAAW,CACzB,QAAW,CACTxK,QAAS,6CACTC,YAAY,GAEd,OAAU,CACRD,QAAS,iDACTE,QAAQ,GAGV,QAAW,gCAEX,OAAU,CACRF,QAAS,4BACT5B,OAAQ,CACN,SAAY,kCAGhB,SAAY,kDACZ,QAAW,CACX,6HACA,CACE4B,QAAS,wQACTC,YAAY,IAEd,SAAY,uBACZ,YAAe,YAIjBnD,EAAMgB,UAAU2M,WAAa3N,EAAMgB,UAAUC,OAAO,IAAK,CACvD,QAAW,wYACX,OAAU,qFACV,SAAY,iEAEPjB,EAAMgB,UAAU2M,WAAW,cAGlC3N,EAAMgB,UAAU4M,MAAQ,CACtB,QAAW,mBACX,OAAU,CAAC,CACT1K,QAAS,wBACTE,QAAQ,GACP,CACDF,QAAS,qDACTE,QAAQ,IAEV,OAAU,yEACV,KAAQ,CACNF,QAAS,YACT5C,MAAO,YAET,UAAa,CACX4C,QAAS,SACT5C,MAAO,YAET,QAAW,2RACX,QAAW,qBAEX,SAAY,kGACZ,YAAe,oBAIjBN,EAAMgB,UAAU6M,OAAS,CACvB,QAAW,CACT3K,QAAS,eACTC,YAAY,GAEd,uBAAwB,CACtBD,QAAS,sEACTE,QAAQ,EACR9B,OAAQ,CACN,cAAiB,CAEf4B,QAAS,2EACTC,YAAY,EACZ7B,OAAQ,CACN,cAAe,CACb4B,QAAS,qBACTC,YAAY,GAEd,oBAAqB,CACnBD,QAAS,kBACT5C,MAAO,eAETmE,KAAM,OAGV,OAAU,YAGd,uBAAwB,CACtBvB,QAAS,uCACTE,QAAQ,EACR9C,MAAO,UAET,OAAU,CACR4C,QAAS,mDACTE,QAAQ,GAEV,SAAY,CACVF,QAAS,4CACTC,YAAY,GAEd,aAAc,CACZD,QAAS,mBACTC,YAAY,GAEd,UAAa,CACXD,QAAS,wBACTC,YAAY,EACZ7C,MAAO,CAAC,aAAc,eACtBgB,OAAQ,CACN,YAAe,OAGnB,QAAW,mMACX,QAAW,shBACX,QAAW,0BACX,OAAU,6FACV,SAAY,oDACZ,YAAe,iBAEjBtB,EAAMgB,UAAU6M,OAAO,wBAAwBvM,OAAsB,cAAEA,OAAOmD,KAAOzE,EAAMgB,UAAU6M,OACrG7N,EAAMgB,UAAU8M,GAAK9N,EAAMgB,UAAU6M,OAGrC7N,EAAMgB,UAAU+M,OAAS/N,EAAMgB,UAAUC,OAAO,QAAS,CACvD,QAAW,CACTiC,QAAS,4BACTC,YAAY,GAEd,OAAU,CACRD,QAAS,sCACTE,QAAQ,GAGV,aAAc,aACd,QAAW,4RACX,SAAY,wGAEdpD,EAAMgB,UAAUK,aAAa,SAAU,aAAc,CACnD,UAAa,CACX6B,QAAS,gEACT5C,MAAO,UAET,YAAe,CAEb4C,QAAS,wBACT5C,MAAO,YAET,MAAS,CACP4C,QAAS,mBACT5C,MAAO,mBAIJN,EAAMgB,UAAU+M,OAAOnG,SAG9B,SAAW5H,GACTA,EAAMgB,UAAUgN,KAAOhO,EAAMgB,UAAUC,OAAO,MAAO,CAEnD,QAAW,CACTiC,QAAS,iDACTC,YAAY,KAGhBnD,EAAMgB,UAAUK,aAAa,OAAQ,SAAU,CAE7C,cAAe,CAEb6B,QAAS,sBACT5B,OAAQ,CACN,OAAU,+BAITtB,EAAMgB,UAAUgN,KAAKC,OAC5B,IAAIpI,EAAW,yBACXqI,EAAW,CAAC,2CAA4C,CAC1DhL,QAAS,eACTC,YAAY,IAEdnD,EAAMgB,UAAUK,aAAa,OAAQ,WAAY,CAE/C,gBAAiB,CACf6B,QAAS,eACT5B,OAAQ,CACN,YAAe,IACf,SAAYuE,EACZ,SAAYqI,IAIhB,gBAAiB,CACfhL,QAAS,sCACT5B,OAAQ,CACN,SAAY,CAAC,kBAAmB,CAC9B4B,QAAS,aACTC,YAAY,IAEd,YAAe,IACf,SAAY0C,EACZ,SAAYqI,EACZ,UAAalO,EAAMgB,UAAUgN,KAAKG,qBAIjCnO,EAAMgB,UAAUgN,KAAKI,gBACrBpO,EAAMgB,UAAUgN,KAAKG,UAG5BnO,EAAMgB,UAAUK,aAAa,OAAQ,cAAe,CAClD,SAAY,CACV6B,QAAS,yEACTC,YAAY,KAxDlB,CA2DGnD,GAIHA,EAAMgB,UAAUqN,KAAOrO,EAAMgB,UAAUC,OAAO,MAAO,CACnD,QAAW,CACTiC,QAAS,uCACTC,YAAY,GAEd,OAAU,CACRD,QAAS,0CACT5B,OAAQ,CACN,KAAQ,YAKZ,IAAO,0BAQP,SAAY,CAEV4B,QAAS,iFACT5B,OAAQ,CACN,OAAU,CACR4B,QAAS,IACT5C,MAAO,aAET,YAAe,UACf,SAAY,2BAGhB,SAAY,CACV4C,QAAS,4CACT5B,OAAQ,CACN,SAAY,6BAIlBtB,EAAMgB,UAAUK,aAAa,OAAQ,SAAU,CAC7C,QAAW,CAAC,sGAAuG,CACjH6B,QAAS,4BACTC,YAAY,MAGhBnD,EAAMgB,UAAUK,aAAa,OAAQ,YAAa,CAEhD,SAAY,2BAEdrB,EAAMgB,UAAUK,aAAa,OAAQ,WAAY,CAC/C,YAAe,CACb6B,QAAS,UACT5C,MAAO,YAET,UAAa,CACX4C,QAAS,6BACT5C,MAAO,WAET,QAAW,qBACX,KAAQ,CACN4C,QAAS,WACT5C,MAAO,WAET,SAAY,CACV4C,QAAS,kDACTC,YAAY,KAGhBnD,EAAMgB,UAAUqN,KAAa,OAAE/M,OAAOmD,KAAOzE,EAAMgB,UAAUqN,KAG7DrO,EAAMgB,UAAUsN,IAAM,CACpB,QAAW,CACTpL,QAAS,gDACTC,YAAY,GAEd,SAAY,CAAC,CACXD,QAAS,sCACTE,QAAQ,GACP,YACH,OAAU,CACRF,QAAS,kDACTE,QAAQ,EACRD,YAAY,GAEd,SAAY,4FAEZ,QAAW,+8EACX,QAAW,2BACX,OAAU,wCACV,SAAY,yHACZ,YAAe,eAIjB,SAAWnD,GACT,IAAIsB,EAAS,CACX,IAAO,uBACP,OAAU,CACR4B,QAAS,gDACTE,QAAQ,GAEV,cAAiB,KAEjB,KAAQ,KAER,UAAa,+BACb,QAAW,CACTF,QAAS,4DACTC,YAAY,GAEd,QAAW,iBACX,OAAU,oBACV,QAAW,qBACX,SAAY,CAEZ,oGACA,YAAe,iBAEjB7B,EAAsB,cAAI,CACxB4B,QAAS,iBACT5C,MAAO,WACPgB,OAAQ,CACN,UAAa,CACX4B,QAAS,QACT5C,MAAO,eAETmE,KAAMnD,IAGVA,EAAa,KAAI,CACf4B,QAAS,oBACT5B,OAAQ,CACN,SAAY,SACZmD,KAAMnD,IAGVtB,EAAMgB,UAAUuN,OAAS,CACvB,QAAW,CACTrL,QAAS,qCACTC,YAAY,GAEd,qBAAsB,CACpBD,QAAS,aACTC,YAAY,EACZ7B,OAAQ,CACN,OAAU,WACVmD,KAAMnD,IAGV,uBAAwB,CACtB4B,QAAS,sDACTC,YAAY,EACZ7B,OAAQ,CACN,SAAY,OACZmD,KAAMnD,IAGV,UAAa,CACX4B,QAAS,kDACTC,YAAY,EACZ7B,OAAQ,CACNmI,QAAS,OACThF,KAAMnD,IAKV,uBAAwB,CACtB4B,QAAS,0HACTC,YAAY,EACZ7B,OAAQ,CACN,SAAY,CACV4B,QAAS,WACT5B,OAAQ,CACN,cAAiBA,EAAO6H,gBAG5B1E,KAAMnD,IAMV,SAAY,CACV4B,QAAS,uNACTC,YAAY,EACZ7B,OAAQ,CACN,cAAiBA,EAAO6H,cACxB,YAAe,UAGnB,KAAQ7H,EAAOkN,KACf,OAAUlN,EAAO8E,OACjB,cAAiB9E,EAAO6H,cACxB,YAAe,iBApGnB,CAsGGnJ,GAIH,IAAI4J,EAAa5J,EAAMC,KAAKU,MAAMX,EAAMgB,UAAU4I,YAClD5J,EAAMgB,UAAUyN,IAAMzO,EAAMgB,UAAUC,OAAO,MAAO2I,GAGpD5J,EAAMgB,UAAU0N,KAAO,CACrB,QAAW,CAAC,iBAAkB,CAC5BxL,QAAS,OACTE,QAAQ,IAEV,OAAU,CACRF,QAAS,yBACTE,QAAQ,GAEV,QAAW,CAAC,CACVF,QAAS,sBACT5B,OAAQ,CACN,SAAY,MAEb,CACD4B,QAAS,ibACT5B,OAAQ,CACN,YAAe,OAEhB,4QACH,SAAY,oCACZ,OAAU,kNACV,YAAe,QAIjBtB,EAAMgB,UAAU2N,KAAO,CACrB,OAAU,CACRzL,QAAS,wFACTC,YAAY,EACZ7C,MAAO,UAET,QAAW,MACX,IAAO,CACL4C,QAAS,+EACTC,YAAY,EACZ7C,MAAO,UAET,UAAa,CACX4C,QAAS,gBACTC,YAAY,EACZ7C,MAAO,aAET,SAAY,CACV4C,QAAS,2MACTC,YAAY,EACZ7C,MAAO,UAET,QAAW,CACT4C,QAAS,mEACTC,YAAY,EACZ7C,MAAO,aAET,KAAQ,CACN4C,QAAS,+DACTC,YAAY,EACZ7C,MAAO,aAET,OAAU,CACR4C,QAAS,4FACTC,YAAY,EACZC,QAAQ,GAEV,OAAU,CACRF,QAAS,gIACTC,YAAY,GAEd,IAAO,UACP,UAAa,YACb,YAAe,6BAEjBnD,EAAMgB,UAAU4N,IAAM5O,EAAMgB,UAAU2N,KACvB,IC9lGXE,EAAe,CAEjB7O,MD4lGa,EC3lGb8O,MCJU,CACVC,MAAO,CACLC,gBAAiB,UACjBC,MAAO,WAETC,OAAQ,CAAC,CACPC,MAAO,CAAC,UAAW,SAAU,UAAW,QAAS,eACjDC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,aACRC,MAAO,CACLC,QAAS,KAEV,CACDF,MAAO,CAAC,MAAO,WAAY,UAC3BC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,WAAY,YACpBC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,SAAU,WAAY,aAC9BC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,UAAW,SAAU,SAAU,MAAO,aAAc,UAAW,UAAW,YAAa,OAAQ,YAAa,QAAS,UAAW,cAAe,YACvJC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,WACRC,MAAO,CACLE,mBAAoB,iBAErB,CACDH,MAAO,CAAC,YACRC,MAAO,CACLE,mBAAoB,cAErB,CACDH,MAAO,CAAC,UACRC,MAAO,CACLG,UAAW,WAEZ,CACDJ,MAAO,CAAC,YAAa,QACrBC,MAAO,CACLI,WAAY,SAEb,CACDL,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,eDxDb,SAASQ,EAAgBlQ,EAAKjB,EAAKkB,GAYjC,OAXIlB,KAAOiB,EACT/C,OAAOiD,eAAeF,EAAKjB,EAAK,CAC9BkB,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIjB,GAAOkB,EAGND,EAGT,SAASmQ,IAeP,OAdAA,EAAWlT,OAAOmT,QAAU,SAAU5M,GACpC,IAAK,IAAItF,EAAI,EAAGA,EAAIkE,UAAUnE,OAAQC,IAAK,CACzC,IAAIgG,EAAS9B,UAAUlE,GAEvB,IAAK,IAAIa,KAAOmF,EACVjH,OAAOkC,UAAUmC,eAAejC,KAAK6E,EAAQnF,KAC/CyE,EAAOzE,GAAOmF,EAAOnF,IAK3B,OAAOyE,IAGOuB,MAAMtC,KAAML,WAG9B,IAAIiO,EAAY,aAEZC,EAAsB,SAA6BC,GACjC,IAAhBA,EAAKtS,OACPsS,EAAK3L,KAAK,CACRgL,MAAO,CAAC,SACR9O,QAAS,GACT0P,OAAO,IAEgB,IAAhBD,EAAKtS,QAAoC,KAApBsS,EAAK,GAAGzP,UACtCyP,EAAK,GAAGC,OAAQ,IAIhBC,EAAc,SAAqBb,EAAO3K,GAC5C,IAAIyL,EAAYd,EAAM3R,OAEtB,OAAIyS,EAAY,GAAKd,EAAMc,EAAY,KAAOzL,EACrC2K,EAGFA,EAAMvG,OAAOpE,IA+ElB0L,EAAc,SAAqBpB,EAAOzM,GAC5C,IAAI0M,EAAQD,EAAMC,MAEdoB,EAAO3T,OAAO4T,OAAO,MACrBC,EAAYvB,EAAMI,OAAOoB,QAAO,SAAUC,EAAKC,GACjD,IAAIxP,EAAYwP,EAAWxP,UACvBoO,EAAQoB,EAAWpB,MAEvB,OAAIpO,IAAcA,EAAUyP,SAASpO,IAIrCmO,EAAWrB,MAAMrO,SAAQ,SAAUV,GAEjC,IAAIsQ,EAAWhB,EAAS,GAAIa,EAAInQ,GAAOgP,GAEvCmB,EAAInQ,GAAQsQ,KAPLH,IAURJ,GAOH,OALAE,EAAU5O,KAAOsN,EAEjBsB,EAAUtB,MAAQW,EAAS,GAAIX,EAAO,CACpCC,gBAAiB,OAEZqB,GAGT,SAASM,EAAwBpR,EAAKqR,GACpC,IAAI7N,EAAS,GAEb,IAAK,IAAIgB,KAAKxE,EACR/C,OAAOkC,UAAUmC,eAAejC,KAAKW,EAAKwE,KAA8B,IAAxB6M,EAAQvI,QAAQtE,KAAWhB,EAAOgB,GAAKxE,EAAIwE,IAGjG,OAAOhB,EAGT,IA4Ie,EA5Ic,SAAU8N,GACrC,SAASC,IAKP,IAJA,IAAIC,EAAS/O,KACTkC,EAAO,GACP3G,EAAMoE,UAAUnE,OAEbD,KACL2G,EAAK3G,GAAOoE,UAAUpE,GAGxBsT,EAAUvM,MAAMtC,KAAMkC,GAEtBuL,EAAgBzN,KAAM,gBAAgB,SAAUhE,GAC9C,QAAyBgT,IAArBD,EAAOV,WAA2BrS,EAAM8Q,QAAUiC,EAAOE,WAAajT,EAAMqE,WAAa0O,EAAOG,aAClG,OAAOH,EAAOV,UAGhBU,EAAOE,UAAYjT,EAAM8Q,MACzBiC,EAAOG,aAAelT,EAAMqE,SAC5B,IAAIgO,EAAYrS,EAAM8Q,MAAQoB,EAAYlS,EAAM8Q,MAAO9Q,EAAMqE,eAAY2O,EACzE,OAAOD,EAAOV,UAAYA,KAG5BZ,EAAgBzN,KAAM,gBAAgB,SAAUmP,GAC9C,IAAI7S,EAAM6S,EAAI7S,IACVoJ,EAAYyJ,EAAIzJ,UAChB0H,EAAQ+B,EAAI/B,MAIZgC,EAAS1B,EAAS,GAHTiB,EAAwBQ,EAAK,CAAC,MAAO,YAAa,QAAS,SAGxC,CAC9BzJ,UAAW,aACX0H,WAAO4B,EACP1S,SAAK0S,IAGHX,EAAYU,EAAOM,aAAaN,EAAO/S,OAkB3C,YAhBkBgT,IAAdX,IACFe,EAAOhC,MAAQiB,EAAUtB,YAGbiC,IAAV5B,IACFgC,EAAOhC,WAAyB4B,IAAjBI,EAAOhC,MAAsBM,EAAS,GAAI0B,EAAOhC,MAAOA,GAASA,QAGtE4B,IAAR1S,IACF8S,EAAO9S,IAAMA,GAGXoJ,IACF0J,EAAO1J,WAAa,IAAMA,GAGrB0J,KAGT3B,EAAgBzN,KAAM,oBAAoB,SAAUmP,GAClD,IAAIhC,EAAQgC,EAAIhC,MACZY,EAAQoB,EAAIpB,MACZE,EAAYd,EAAM3R,OAClB6S,EAAYU,EAAOM,aAAaN,EAAO/S,OAE3C,QAAkBgT,IAAdX,EAAJ,CAEO,GAAkB,IAAdJ,GAAgC,UAAbd,EAAM,GAClC,OAAOY,EAAQ,CACbuB,QAAS,qBACPN,EACC,GAAkB,IAAdf,IAAoBF,EAC7B,OAAOM,EAAUlB,EAAM,IAGzB,IAAIoC,EAAYxB,EAAQ,CACtBuB,QAAS,gBACP,GAEAE,EAAarC,EAAM5O,KAAI,SAAUH,GACnC,OAAOiQ,EAAUjQ,MAEnB,OAAO5D,OAAOmT,OAAOrL,MAAM9H,OAAQ,CAAC+U,GAAW3I,OAAO4I,QAGxD/B,EAAgBzN,KAAM,iBAAiB,SAAUmP,GAC/C,IAAI7S,EAAM6S,EAAI7S,IACVoJ,EAAYyJ,EAAIzJ,UAChB0H,EAAQ+B,EAAI/B,MACZtN,EAAQqP,EAAIrP,MAIZsP,EAAS1B,EAAS,GAHTiB,EAAwBQ,EAAK,CAAC,MAAO,YAAa,QAAS,UAGxC,CAC9BzJ,UAAW,SAAW5F,EAAMqN,MAAMtK,KAAK,KACvC9G,SAAU+D,EAAMzB,QAChB+O,MAAO2B,EAAOU,iBAAiB3P,GAC/BxD,SAAK0S,IAeP,YAZcA,IAAV5B,IACFgC,EAAOhC,WAAyB4B,IAAjBI,EAAOhC,MAAsBM,EAAS,GAAI0B,EAAOhC,MAAOA,GAASA,QAGtE4B,IAAR1S,IACF8S,EAAO9S,IAAMA,GAGXoJ,IACF0J,EAAO1J,WAAa,IAAMA,GAGrB0J,KA2BX,OAvBIP,IAAWC,EAAUxT,UAAYuT,GACrCC,EAAUpS,UAAYlC,OAAO4T,OAAOS,GAAaA,EAAUnS,WAC3DoS,EAAUpS,UAAUI,YAAcgS,EAElCA,EAAUpS,UAAUgT,OAAS,WAC3B,IAAIP,EAAMnP,KAAKhE,MACXgC,EAAQmR,EAAInR,MACZqC,EAAW8O,EAAI9O,SACfE,EAAO4O,EAAI5O,KACXxE,EAAWoT,EAAIpT,SACfsS,EAAYrO,KAAKqP,aAAarP,KAAKhE,OACnC0D,EAAU1B,EAAMgB,UAAUqB,GAG9B,OAAOtE,EAAS,CACdoC,OA9OgB,SAAyBA,GAU7C,IATA,IAAIwR,EAAe,CAAC,IAChBC,EAAgB,CAACzR,GACjB0R,EAAqB,CAAC,GACtBC,EAAoB,CAAC3R,EAAO3C,QAC5BC,EAAI,EACJsU,EAAa,EACbC,EAAc,GACdzB,EAAM,CAACyB,GAEJD,GAAc,GAAG,CACtB,MAAQtU,EAAIoU,EAAmBE,MAAiBD,EAAkBC,IAAa,CAC7E,IAAI1R,OAAU,EACV8O,EAAQwC,EAAaI,GAErBjQ,EADW8P,EAAcG,GACRtU,GAgBrB,GAdqB,iBAAVqE,GACTqN,EAAQ4C,EAAa,EAAI5C,EAAQ,CAAC,SAClC9O,EAAUyB,IAEVqN,EAAQa,EAAYb,EAAOrN,EAAM1B,MAE7B0B,EAAMxB,QACR6O,EAAQa,EAAYb,EAAOrN,EAAMxB,QAGnCD,EAAUyB,EAAMzB,SAIK,iBAAZA,EAAX,CAUA,IAAI4R,EAAkB5R,EAAQ8L,MAAMyD,GAChCsC,EAAeD,EAAgBzU,OACnCwU,EAAY7N,KAAK,CACfgL,MAAOA,EACP9O,QAAS4R,EAAgB,KAG3B,IAAK,IAAIE,EAAM,EAAGA,EAAMD,EAAcC,IACpCtC,EAAoBmC,GACpBzB,EAAIpM,KAAK6N,EAAc,IACvBA,EAAY7N,KAAK,CACfgL,MAAOA,EACP9O,QAAS4R,EAAgBE,UArB3BJ,IACAJ,EAAaxN,KAAKgL,GAClByC,EAAczN,KAAK9D,GACnBwR,EAAmB1N,KAAK,GACxB2N,EAAkB3N,KAAK9D,EAAQ7C,QAuBnCuU,IACAJ,EAAa5K,MACb6K,EAAc7K,MACd8K,EAAmB9K,MACnB+K,EAAkB/K,MAIpB,OADA8I,EAAoBmC,GACbzB,EAyKQ6B,MADiBpB,IAAZtP,EAAwB1B,EAAMwC,SAASD,EAAMb,EAASW,GAAY,CAACE,IAInFmF,UAAW,uBAAyBrF,EACpC+M,WAAqB4B,IAAdX,EAA0BA,EAAU5O,KAAO,GAClD4Q,aAAcrQ,KAAKqQ,aACnBC,cAAetQ,KAAKsQ,iBAIjBxB,EAzIoB,CA0I3B,aE3Qa,EArDH,CACV/B,MAAO,CACLE,MAAO,UACPD,gBAAiB,WAEnBE,OAAQ,CAAC,CACPC,MAAO,CAAC,UAAW,SAAU,UAAW,SACxCC,MAAO,CACLH,MAAO,UACPM,UAAW,WAEZ,CACDJ,MAAO,CAAC,aACRC,MAAO,CACLC,QAAS,KAEV,CACDF,MAAO,CAAC,SAAU,cAClBC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,cAAe,YACvBC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,SAAU,MAAO,SAAU,SAAU,UAAW,WAAY,WAAY,WAAY,QAAS,YACrGC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,SAAU,UAAW,YAAa,YAC1CC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,WAAY,UAAW,OAC/BC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,qBACRC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,MAAO,WAAY,WAC3BC,MAAO,CACLH,MAAO,c,ykBC/CE,kBAA4B,IAA1BlR,EAAyB,EAAzBA,SAETsE,EAFkC,EAAfqF,UAEElH,QAAQ,YAAa,IAEhD,OACE,kBAAC,EAAD,iBAAeqO,EAAf,CAA6BtM,KAAMxE,EAAUsE,SAAUA,EAAUyM,MAAOA,KACrE,gBAAEpH,EAAF,EAAEA,UAAW0H,EAAb,EAAaA,MAAOjP,EAApB,EAAoBA,OAAQkS,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,cAA1C,OACC,yBAAK5K,UAAWA,EAAW0H,MAAK,OAAMA,GAAN,IAAamD,QAAS,UACnDpS,EAAOI,KAAI,SAACuP,EAAMrS,GAAP,OACV,uCAAKa,IAAKb,GAAO4U,EAAa,CAACvC,OAAMxR,IAAKb,KACvCqS,EAAKvP,KAAI,SAACuB,EAAOxD,GAAR,OACR,wCAAMA,IAAKA,GAASgU,EAAc,CAACxQ,QAAOxD,sBCN3C,SAASkU,EAAT,GAAwC,IAAV5U,EAAS,EAAjB6U,KAAQ7U,IAEvC8U,EAAa,CACjBC,IAAK,SAAA3U,GAAK,OAAI,wBAASA,IACvBuE,KAAM,SAAAvE,GAAK,OAAI,kBAAC,EAAcA,KAG9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK4U,MAAUhV,EAAIiV,YAAYD,MAArB,YACV,yBAAKlL,UAAU,gBACb,4BAAK9J,EAAIiV,YAAYD,OACrB,yBAAKlL,UAAU,aACb,kBAAC,cAAD,CAAagL,WAAYA,GACvB,8BAAM,kBAAC,cAAD,KAAc9U,EAAIkV,a,qBCtBpC,IAAIzV,EAAiB,EAAQ,QAEzB0V,EAA2B,EAAQ,QAEvC,SAASC,EAAWC,EAAQ/O,EAAMgP,GAchC,OAbIH,IACF7W,EAAOC,QAAU6W,EAAa/T,QAAQC,UAEtChD,EAAOC,QAAU6W,EAAa,SAAoBC,EAAQ/O,EAAMgP,GAC9D,IAAIC,EAAI,CAAC,MACTA,EAAEhP,KAAKG,MAAM6O,EAAGjP,GAChB,IACIkP,EAAW,IADGC,SAASC,KAAKhP,MAAM2O,EAAQE,IAG9C,OADID,GAAO7V,EAAe+V,EAAUF,EAAMxU,WACnC0U,GAIJJ,EAAW1O,MAAM,KAAM3C,WAGhCzF,EAAOC,QAAU6W","file":"component---src-components-blog-layout-js-88c55709438fb4ec120a.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var insideString = {\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true\n    }, // “Normal” string\n    {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n  'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'class-name': {\n    pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'number': {\n    pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,\n    greedy: true\n  },\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n  'boolean': /\\b(?:true|false)\\b/\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': {\n      pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: Prism.languages.css.selector,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': {\n      pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n      greedy: true,\n      inside: {\n        'punctuation': /^\\[|\\]$/,\n        'case-sensitivity': {\n          pattern: /(\\s)[si]$/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'namespace': {\n          pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\|$/\n          }\n        },\n        'attribute': {\n          pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n          lookbehind: true\n        },\n        'value': [/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, {\n          pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n          lookbehind: true\n        }],\n        'operator': /[|~*^$]?=/\n      }\n    },\n    'n-th': [{\n      pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: {\n        'number': /[\\dn]+/,\n        'operator': /[+-]/\n      }\n    }, {\n      pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n      lookbehind: true\n    }],\n    'punctuation': /[()]/\n  }\n};\nPrism.languages.insertBefore('css', 'property', {\n  'variable': {\n    pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('css', 'function', {\n  'operator': {\n    pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n    lookbehind: true\n  },\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'unit': {\n    pattern: /(\\d)(?:%|[a-z]+)/,\n    lookbehind: true\n  },\n  'number': /-?[\\d.]+/\n});\n/* \"prismjs/components/prism-javascript\" */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-javadoclike\" */\n\n\n(function (Prism) {\n  var javaDocLike = Prism.languages.javadoclike = {\n    'parameter': {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n      lookbehind: true\n    },\n    'keyword': {\n      // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n      // @word, {@word}\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: true\n    },\n    'punctuation': /[{}]/\n  };\n  /**\n   * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n   *\n   * @param {string} lang the language add doc comment support to.\n   * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n   */\n\n  function docCommentSupport(lang, callback) {\n    var tokenName = 'doc-comment';\n    var grammar = Prism.languages[lang];\n\n    if (!grammar) {\n      return;\n    }\n\n    var token = grammar[tokenName];\n\n    if (!token) {\n      // add doc comment: /** */\n      var definition = {};\n      definition[tokenName] = {\n        pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n        alias: 'comment'\n      };\n      grammar = Prism.languages.insertBefore(lang, 'comment', definition);\n      token = grammar[tokenName];\n    }\n\n    if (token instanceof RegExp) {\n      // convert regex to object\n      token = grammar[tokenName] = {\n        pattern: token\n      };\n    }\n\n    if (Array.isArray(token)) {\n      for (var i = 0, l = token.length; i < l; i++) {\n        if (token[i] instanceof RegExp) {\n          token[i] = {\n            pattern: token[i]\n          };\n        }\n\n        callback(token[i]);\n      }\n    } else {\n      callback(token);\n    }\n  }\n  /**\n   * Adds doc-comment support to the given languages for the given documentation language.\n   *\n   * @param {string[]|string} languages\n   * @param {Object} docLanguage\n   */\n\n\n  function addSupport(languages, docLanguage) {\n    if (typeof languages === 'string') {\n      languages = [languages];\n    }\n\n    languages.forEach(function (lang) {\n      docCommentSupport(lang, function (pattern) {\n        if (!pattern.inside) {\n          pattern.inside = {};\n        }\n\n        pattern.inside.rest = docLanguage;\n      });\n    });\n  }\n\n  Object.defineProperty(javaDocLike, 'addSupport', {\n    value: addSupport\n  });\n  javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n})(Prism);\n/* \"prismjs/components/prism-java\" */\n\n\n(function (Prism) {\n  var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\n\n  var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'class-name': [className, // variables and parameters\n    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n    /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(\\:\\:)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    },\n    'namespace': {\n      pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-markup-templating\" */\n\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n    'boolean': {\n      pattern: /\\b(?:false|true)\\b/i,\n      alias: 'constant'\n    },\n    'constant': [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'comment', {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': string_interpolation // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': string_interpolation // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-jsdoc\" */\n\n\n(function (Prism) {\n  var javascript = Prism.languages.javascript;\n  var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n  var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n  Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n    'parameter': {\n      // @param {string} foo - foo bar\n      pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('jsdoc', 'keyword', {\n    'optional-parameter': {\n      // @param {string} [baz.foo=\"bar\"] foo bar\n      pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'parameter': {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'code': {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        },\n        'punctuation': /[=[\\]]/\n      }\n    },\n    'class-name': [{\n      pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.,:?=<>|{}()[\\]]/\n      }\n    }, {\n      pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }],\n    'example': {\n      pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: true,\n      inside: {\n        'code': {\n          pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        }\n      }\n    }\n  });\n  Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: /(\\.\\s*)#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-flow\" */\n\n\n(function (Prism) {\n  Prism.languages.flow = Prism.languages.extend('javascript', {});\n  Prism.languages.insertBefore('flow', 'keyword', {\n    'type': [{\n      pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n      alias: 'tag'\n    }]\n  });\n  Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n  delete Prism.languages.flow['parameter'];\n  Prism.languages.insertBefore('flow', 'operator', {\n    'flow-punctuation': {\n      pattern: /\\{\\||\\|\\}/,\n      alias: 'punctuation'\n    }\n  });\n\n  if (!Array.isArray(Prism.languages.flow.keyword)) {\n    Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n  }\n\n  Prism.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n    lookbehind: true\n  });\n})(Prism);\n/* \"prismjs/components/prism-n4js\" */\n\n\nPrism.languages.n4js = Prism.languages.extend('javascript', {\n  // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n  'keyword': /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n});\nPrism.languages.insertBefore('n4js', 'constant', {\n  // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n  'annotation': {\n    pattern: /@+\\w+/,\n    alias: 'operator'\n  }\n});\nPrism.languages.n4jsd = Prism.languages.n4js;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {}\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(Prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n  'operator': /[!=|]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\r?\\n|\\r)(?!\\r?\\n|\\r))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @param {boolean} starAlternative Whether to also add an alternative where all `_`s are replaced with `*`s.\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern, starAlternative) {\n    pattern = pattern.replace(/<inner>/g, inner);\n\n    if (starAlternative) {\n      pattern = pattern + '|' + pattern.replace(/_/g, '\\\\*');\n    }\n\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``.+?``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\r?\\n|\\r)|$)/.source.replace(/__/g, tableCell);\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\r?\\n|\\r)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /(^[ \\t]*(?:\\r?\\n|\\r))(?: {4}|\\t).+(?:(?:\\r?\\n|\\r)(?: {4}|\\t).+)*/m,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\r?\\n|\\r)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#+.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[(?:(?!\\])<inner>)+\\])/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'variable': {\n          pattern: /(\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'content': {\n          pattern: /(^!?\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'string': {\n          pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          var alias = 'language-' + codeLang.content.trim().split(/\\s+/)[0].toLowerCase(); // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d+.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      // pattern: /^(?:[_].*(?:\\r\\n?|\\n|(?![\\s\\S])))+/m\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'number': /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\nvar typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n/* \"prismjs/components/prism-wasm\" */\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nPrism.languages.yml = Prism.languages.yaml;\nexport default Prism;","import \"core-js/modules/es.array.reduce.js\";\nimport Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\nexport default theme;","import React from 'react'\nimport Highlight, {defaultProps} from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/github'\nexport default ({children, className}) => {\n\n  const language = className.replace(/language-/, '')\n\n  return (\n    <Highlight {...defaultProps} code={children} language={language} theme={theme}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <pre className={className} style={{...style, padding: '20px'}}>\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({line, key: i})}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({token, key})} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from './seo';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { graphql } from 'gatsby';\nimport { MDXProvider } from '@mdx-js/react'\nimport CodeBlock from './code-block'\n\nexport default function BlogLayout({ data: { mdx } }) {\n\nconst components = {\n  pre: props => <div {...props} />,\n  code: props => <CodeBlock {...props} />\n}\n\n  return (\n    <Layout>\n      <SEO title={`${mdx.frontmatter.title} - Blog`} />\n      <div className=\"blog-content\">\n        <h1>{mdx.frontmatter.title}</h1>\n        <div className=\"blog-body\">\n          <MDXProvider components={components}>\n            <main><MDXRenderer>{mdx.body}</MDXRenderer></main>\n          </MDXProvider>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}